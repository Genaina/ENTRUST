<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Service Configuration
const int MAX_NUM = 2;
typedef int[1, MAX_NUM] s_id;
const int MAX_TYPE = 6;
typedef int [1, MAX_TYPE] s_type;
// Type of Services
const int MARKET_WATCH = 1, TECHNICAL_ANALYSIS = 2, FUNDAMENTAL_ANALYSIS = 3, ORDER_SERVICE = 4, ALARM_SERVICE = 5, NOTIFICATION_SERVICE = 6;

const int MW = 1, TA = 2, FA = 3, OS = 4, AS = 5, NS = 6;
typedef struct{
    int type;
    int id;
    int reliability;
    int cost;
    int responseTime;
}Service;

Service services[s_type][s_id] = 

//{{{MW, 1, 990, 7851, 1282},	{MW, 2, 979, 13393, 3380},	{MW, 3, 960, 3122, 1659}},	
//{{TA, 1, 967, 1089, 4804},	{TA, 2, 971, 13076, 3656},	{TA, 3, 999, 11367, 1654}},	
//{{FA, 1, 971, 6319, 4539},	{FA, 2, 995, 6532, 4193},	{FA, 3, 954, 11968, 2467}},	
//{{OS, 1, 972, 4999, 848},	{OS, 2, 959, 2061, 2030},	{OS, 3, 976, 3629, 3961}},	
//{{AS, 1, 955, 10341, 3856}, {AS, 2, 958, 7922, 4791},	{AS, 3, 967, 10334, 4563}},	
//{{NS, 1, 956, 1364, 1076},	{NS, 2, 969, 6541, 580},    {NS, 3, 969, 2296, 4086}}};


//{{{MW, 1, 990, 785, 128},	{MW, 2, 979, 1339, 338},	{MW, 3, 960, 312, 166}},	
//{{TA, 1, 967, 109, 480},	{TA, 2, 971, 1308, 367},	{TA, 3, 999, 1137, 165}},	
//{{FA, 1, 971, 632, 454},	{FA, 2, 995, 653, 419},	    {FA, 3, 954, 1197, 246}},	
//{{OS, 1, 972, 500, 85},	    {OS, 2, 959, 206, 203},	    {OS, 3, 976, 363, 396}},	
//{{AS, 1, 955, 1034, 386},   {AS, 2, 958, 792, 479},	    {AS, 3, 967, 1033, 456}},	
//{{NS, 1, 956, 136, 108},	{NS, 2, 969, 654, 58},      {NS, 3, 969, 231, 409}}};

{{{MW, 1, 990, 785, 128},	{MW, 2, 979, 1339, 338}},	
{{TA, 1, 967, 109, 480},	{TA, 2, 971, 1308, 367}},	
{{FA, 1, 971, 632, 454},	{FA, 2, 995, 653, 419}},	
{{OS, 1, 972, 500, 85},	    {OS, 2, 959, 206, 203}},	
{{AS, 1, 955, 1034, 386},   {AS, 2, 958, 792, 479}},	
{{NS, 1, 956, 136, 108},	{NS, 2, 969, 654, 58}}};


// Channels
// Trader
chan normalMode, expertMode, FAResult, TAResult, placeOrder, notification, alarm,  fundamentalAnalysis, marketWatch, error;

// current selected services
s_id sConfig[s_type] = {1,1,1,1,1,1};


// Abstract Service
chan invokeOp[s_type][s_id], invoke[s_type], result, successful;


int avgFRates[s_type][s_id], currentAvgFRates[s_type][s_id];

// Probe
chan setAverageFRates, startRQV, finishRQV;
broadcast chan noPlanningNeeded, noAnalysisRequired, allPlanStepsExecuted;
chan tryAgain, serviceTimeout, workflowStarted, serviceStarted;


int serviceType;

const int MAX_PLAN_STEPS = MAX_TYPE;
int serviceId;
typedef struct{
    int stepType;
    int serviceId;
}Step;

typedef struct
{
    Step steps[MAX_PLAN_STEPS];
    int totalSteps;
}Plan;

const Plan initialPlan = {{{0,0},{0,0},{0,0},{0,0},{0,0},{0,0}}, 0};
Plan plan;

const int RQV_LENGTH = MAX_NUM * MAX_NUM * MAX_NUM * MAX_NUM * MAX_NUM * MAX_NUM;
typedef struct{
    s_id sConfig[s_type];
    int RQV1Result;
    int RQV2Result;
    int RQV3Result;
}RQVResult;

RQVResult RQVResultsArray[RQV_LENGTH];
int bestResult;
int bestIndex;
s_id newConfig[s_type];

chan startAnalysis, startPlanning, startExecuting;
chan  changeService;
// PLANS
const int CHANGE_MARKET_WATCH_SERVICE = 1, CHANGE_FUNDAMENTAL_ANALYSIS_SERVICE = 2, CHANGE_TECHNICAL_ANALYSIS_SERVICE = 3, CHANGE_ORDER_SERVICE = 4, CHANGE_ALARM_SERVICE = 5, CHANGE_NOTIFICATION_SERVICE = 6;</declaration>
	<template>
		<name>AbstractService</name>
		<parameter>s_type type, s_id id</parameter>
		<declaration>bool success;

int checkFailureRate(int i){
    return i&gt;=services[type][id].reliability;
}</declaration>
		<location id="id0" x="-212" y="-238">
			<name x="-197" y="-266">Invoked</name>
			<committed/>
		</location>
		<location id="id1" x="-476" y="-238">
			<name x="-545" y="-256">Waiting</name>
		</location>
		<init ref="id1"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<nail x="-212" y="-170"/>
			<nail x="-476" y="-170"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-382" y="-348">success</label>
			<label kind="synchronisation" x="-382" y="-331">successful!</label>
			<nail x="-212" y="-306"/>
			<nail x="-476" y="-306"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="select" x="-459" y="-297">rand:int[0,100]</label>
			<label kind="synchronisation" x="-459" y="-280">invokeOp[type][id]?</label>
			<label kind="assignment" x="-459" y="-263">success = checkFailureRate(rand)</label>
		</transition>
	</template>
	<template>
		<name>NotificationService</name>
		<parameter>s_type type, s_id id</parameter>
		<declaration>bool success;

int checkFailureRate(int i){
    return i&gt;=services[type][id].reliability;
}</declaration>
		<location id="id2" x="102" y="-34">
			<name x="117" y="-62">Invoked</name>
			<committed/>
		</location>
		<location id="id3" x="-162" y="-34">
			<name x="-231" y="-52">Waiting</name>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<nail x="102" y="34"/>
			<nail x="-162" y="34"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="guard" x="-68" y="-144">success</label>
			<label kind="synchronisation" x="-68" y="-127">notification!</label>
			<nail x="102" y="-102"/>
			<nail x="-162" y="-102"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="select" x="-145" y="-93">rand:int[0,100]</label>
			<label kind="synchronisation" x="-145" y="-76">invokeOp[type][id]?</label>
			<label kind="assignment" x="-145" y="-59">success = checkFailureRate(rand)</label>
		</transition>
	</template>
	<template>
		<name>Trader</name>
		<declaration>int count = 0;
const int MAX_TESTS = 5;</declaration>
		<location id="id4" x="187" y="-170">
			<name x="212" y="-178">Error</name>
			<committed/>
		</location>
		<location id="id5" x="187" y="51">
			<urgent/>
		</location>
		<location id="id6" x="187" y="-391">
			<committed/>
		</location>
		<location id="id7" x="306" y="-306">
		</location>
		<location id="id8" x="187" y="-306">
			<urgent/>
		</location>
		<location id="id9" x="187" y="-34">
			<name x="195" y="-68">ExpertMode</name>
			<urgent/>
		</location>
		<location id="id10" x="68" y="-306">
			<name x="17" y="-357">NormalMode</name>
		</location>
		<location id="id11" x="-204" y="-170">
			<name x="-187" y="-161">Start</name>
		</location>
		<location id="id12" x="-51" y="-170">
			<name x="-34" y="-195">Initial</name>
		</location>
		<location id="id13" x="187" y="51">
			<committed/>
		</location>
		<init ref="id11"/>
		<transition>
			<source ref="id4"/>
			<target ref="id12"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="136" y="-102">error?</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="238" y="-229">error?</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="85" y="-238">error?</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id6"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="synchronisation" x="204" y="-416">notification?</label>
			<nail x="306" y="-391"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id11"/>
			<nail x="-204" y="-391"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="204" y="-331">placeOrder!</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="85" y="-331">FAResult?</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id11"/>
			<nail x="-204" y="51"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id11"/>
			<label kind="guard" x="-340" y="-272">count &gt;= 
MAX_TESTS</label>
			<nail x="-340" y="-102"/>
			<nail x="-340" y="-238"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-42" y="-59">expertMode!</label>
			<nail x="-51" y="-34"/>
			<nail x="170" y="-34"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-42" y="-331">normalMode!</label>
			<nail x="-51" y="-306"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="guard" x="-178" y="-221">count &lt; 
MAX_TESTS</label>
			<label kind="assignment" x="-178" y="-187">count++</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="136" y="0">alarm?</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="212" y="26">notification?</label>
			<nail x="306" y="-34"/>
			<nail x="306" y="51"/>
		</transition>
	</template>
	<template>
		<name>ForexService</name>
		<declaration>
</declaration>
		<location id="id14" x="-17" y="-595">
			<committed/>
		</location>
		<location id="id15" x="-127" y="-969">
			<urgent/>
		</location>
		<location id="id16" x="-17" y="-680">
			<committed/>
		</location>
		<location id="id17" x="-127" y="-680">
			<urgent/>
		</location>
		<location id="id18" x="-229" y="-680">
			<committed/>
		</location>
		<location id="id19" x="-544" y="-782">
			<name x="-535" y="-807">Done</name>
			<committed/>
		</location>
		<location id="id20" x="-127" y="-782">
			<name x="-110" y="-790">Failed</name>
			<urgent/>
		</location>
		<location id="id21" x="169" y="-884">
			<urgent/>
		</location>
		<location id="id22" x="93" y="-884">
			<urgent/>
		</location>
		<location id="id23" x="-17" y="-884">
			<committed/>
		</location>
		<location id="id24" x="-127" y="-884">
			<urgent/>
		</location>
		<location id="id25" x="-229" y="-884">
			<committed/>
		</location>
		<location id="id26" x="-306" y="-680">
			<urgent/>
		</location>
		<location id="id27" x="-306" y="-884">
			<name x="-382" y="-935">FundamentalAnalysis</name>
			<urgent/>
		</location>
		<location id="id28" x="-408" y="-884">
			<name x="-510" y="-901">NormalMode</name>
			<urgent/>
		</location>
		<location id="id29" x="-408" y="-782">
			<name x="-391" y="-807">Start</name>
		</location>
		<location id="id30" x="-408" y="-680">
			<name x="-510" y="-697">ExpertMode</name>
			<urgent/>
		</location>
		<location id="id31" x="93" y="-680">
			<urgent/>
		</location>
		<location id="id32" x="169" y="-680">
			<urgent/>
		</location>
		<init ref="id29"/>
		<transition>
			<source ref="id14"/>
			<target ref="id19"/>
			<nail x="-544" y="-595"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="76" y="-620">invoke[NS]!</label>
			<nail x="170" y="-595"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id20"/>
			<nail x="93" y="-748"/>
			<nail x="-93" y="-748"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id19"/>
			<nail x="-544" y="-969"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id15"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id20"/>
			<nail x="-306" y="-816"/>
			<nail x="-161" y="-816"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id20"/>
			<nail x="93" y="-816"/>
			<nail x="-93" y="-816"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id20"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id20"/>
			<nail x="-306" y="-748"/>
			<nail x="-161" y="-748"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id14"/>
			<label kind="synchronisation" x="-8" y="-654">alarm!</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id30"/>
			<nail x="-51" y="-646"/>
			<nail x="-374" y="-646"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id16"/>
			<label kind="synchronisation" x="-102" y="-705">result?</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id17"/>
			<label kind="synchronisation" x="-221" y="-705">invoke[TA]!</label>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="-289" y="-705">result?</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id29"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="76" y="-960">invoke[NS]!</label>
			<nail x="169" y="-969"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="-348" y="-807">error!</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="110" y="-909">result?</label>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id22"/>
			<label kind="synchronisation" x="0" y="-909">invoke[OS]!</label>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id23"/>
			<label kind="synchronisation" x="-110" y="-909">placeOrder?</label>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id24"/>
			<label kind="synchronisation" x="-212" y="-909">FAResult!</label>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id25"/>
			<label kind="synchronisation" x="-289" y="-909">result?</label>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id27"/>
			<label kind="synchronisation" x="-399" y="-909">invoke[FA]!</label>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id26"/>
			<label kind="synchronisation" x="-399" y="-705">invoke[MW]!</label>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id28"/>
			<label kind="synchronisation" x="-510" y="-841">normalMode?</label>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id30"/>
			<label kind="synchronisation" x="-510" y="-739">expertMode?</label>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="110" y="-705">result?</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id31"/>
			<label kind="synchronisation" x="0" y="-705">invoke[OS]!</label>
		</transition>
	</template>
	<template>
		<name>AbstractServiceClient</name>
		<declaration>int type;</declaration>
		<location id="id33" x="-34" y="-136">
			<committed/>
		</location>
		<location id="id34" x="-238" y="-34">
		</location>
		<location id="id35" x="-136" y="-34">
			<committed/>
		</location>
		<location id="id36" x="119" y="-34">
			<name x="43" y="-85">InvokeService</name>
			<committed/>
		</location>
		<init ref="id34"/>
		<transition>
			<source ref="id36"/>
			<target ref="id34"/>
			<nail x="187" y="0"/>
			<nail x="187" y="68"/>
			<nail x="-238" y="68"/>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id34"/>
			<label kind="synchronisation" x="-220" y="-153">result!</label>
			<nail x="-238" y="-136"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id33"/>
			<label kind="synchronisation" x="59" y="-161">successful?</label>
			<nail x="187" y="-68"/>
			<nail x="187" y="-136"/>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id35"/>
			<label kind="select" x="-221" y="-93">t:s_type</label>
			<label kind="synchronisation" x="-221" y="-76">invoke[t]?</label>
			<label kind="assignment" x="-221" y="-59">type = t</label>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id36"/>
			<label kind="select" x="-119" y="-76">t:s_type</label>
			<label kind="synchronisation" x="-119" y="-59">invokeOp[type][sConfig[type]]!</label>
		</transition>
	</template>
	<template>
		<name>Probe</name>
		<declaration>clock x;
const int WAIT_TIME = 9;


void sendMeasurements(){
    int s, i;
    for(s = 1; s &lt;=MAX_TYPE; s++){
        for(i = 1; i &lt;= MAX_NUM; i++){
            currentAvgFRates[s][i] = services[s][i].reliability;
        }
    }
}
</declaration>
		<location id="id37" x="48" y="-40">
			<committed/>
		</location>
		<location id="id38" x="-224" y="-40" color="#00ff00">
			<label kind="invariant" x="-296" y="-72">x &lt;= WAIT_TIME</label>
		</location>
		<init ref="id38"/>
		<transition>
			<source ref="id37"/>
			<target ref="id38"/>
			<label kind="assignment" x="-128" y="8">x=0</label>
			<nail x="24" y="0"/>
			<nail x="-208" y="0"/>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id37"/>
			<label kind="guard" x="-144" y="-96">x &gt;= WAIT_TIME</label>
			<label kind="synchronisation" x="-144" y="-80">setAverageFRates!</label>
			<label kind="assignment" x="-152" y="-64">sendMeasurements()</label>
		</transition>
	</template>
	<template>
		<name>Effector</name>
		<location id="id39" x="-187" y="0">
			<name x="-178" y="-25">ChangeService</name>
			<committed/>
		</location>
		<location id="id40" x="0" y="0">
			<name x="-10" y="-34">Waiting</name>
		</location>
		<init ref="id40"/>
		<transition>
			<source ref="id39"/>
			<target ref="id40"/>
			<label kind="assignment" x="-187" y="51">sConfig[serviceType] = serviceId</label>
			<nail x="-187" y="42"/>
			<nail x="-25" y="42"/>
		</transition>
		<transition>
			<source ref="id40"/>
			<target ref="id39"/>
			<label kind="synchronisation" x="-178" y="-76">changeService?</label>
			<nail x="-34" y="-51"/>
			<nail x="-187" y="-51"/>
		</transition>
	</template>
	<template>
		<name>Monitor</name>
		<declaration>
bool analysisRequired(){
    return avgFRates != currentAvgFRates;
}

void setAvgFRates(){
    avgFRates = currentAvgFRates;
}


</declaration>
		<location id="id41" x="-192" y="32">
			<name x="-243" y="-44">StartAnalysis</name>
			<committed/>
		</location>
		<location id="id42" x="-384" y="32">
			<name x="-418" y="-44">PreProcess</name>
			<committed/>
		</location>
		<location id="id43" x="-576" y="32">
			<name x="-601" y="-44">Waiting</name>
		</location>
		<init ref="id43"/>
		<transition>
			<source ref="id41"/>
			<target ref="id43"/>
			<label kind="synchronisation" x="-348" y="102">startAnalysis!</label>
			<nail x="-192" y="128"/>
			<nail x="-576" y="128"/>
		</transition>
		<transition>
			<source ref="id42"/>
			<target ref="id41"/>
			<label kind="guard" x="-353" y="-10">analysisRequired()</label>
			<label kind="assignment" x="-357" y="8">setAvgFRates()</label>
		</transition>
		<transition>
			<source ref="id42"/>
			<target ref="id43"/>
			<label kind="guard" x="-536" y="56">!analysisRequired()</label>
			<label kind="synchronisation" x="-536" y="72">noAnalysisRequired!</label>
			<nail x="-384" y="96"/>
			<nail x="-544" y="96"/>
		</transition>
		<transition>
			<source ref="id43"/>
			<target ref="id42"/>
			<label kind="synchronisation" x="-548" y="6">setAverageFRates?</label>
		</transition>
	</template>
	<template>
		<name>Analysis</name>
		<declaration>
const int MIN = -32767;
const int MAX = 32767;

void analyze(){
	//double RELIABILITY_THRESHOLD = 0.9; //defined globally
    int RELIABILITY_THRESHOLD = 900; //defined globally *1000

	int bestConfiguration	= -1;
	int bestResult			= MAX;
	int w1 					= 2;
	int w2 					= 8;
    int configuration;
	int result;

	for (configuration=0; configuration&lt;RQV_LENGTH; configuration++){
		RQVResult currentRQVResult 	= RQVResultsArray[configuration];
		int reliability 			= currentRQVResult.RQV1Result;
		int cost     				= currentRQVResult.RQV2Result;
		int time					= currentRQVResult.RQV3Result;


		if (reliability &lt; RELIABILITY_THRESHOLD){
			result = MAX;
		}
		else{
    			result = w1 * cost + w2 * time;
    			if (result &lt; bestResult){ //minimisation is the goal
    				bestResult 			= result;
    				bestConfiguration	= configuration;
    			}

		}//if
	}//for

	//the following holds the best system configuration
	newConfig = RQVResultsArray[bestConfiguration].sConfig;

}
//const int MAX_COST = 25600;
/*
void analyze(){
		
        int i, j, result, reliability, cost, responseTime;
        RQVResult service;
        bestResult 		= MIN;
        bestIndex		= MIN;
        for (i=0; i &lt; 729; i++){ //for all system configurations
	        result = 0;
            reliability = 0;
            cost = 0;
            responseTime = 0;
	        //for (j=1; j&lt;=MAX_TYPE; j++){ //for all services in this configuration
                service = RQVResultArray[i];
                reliability += service.RQV1Result;
                cost += service.RQV2Result;
                responseTime += service.RQV3Result;
		        //result += service.reliability + service.cost + service.responseTime;
	        //}
            result = reliability + MAX/cost + MAX/responseTime;
	        if (result &gt; bestResult){
	        	bestResult = result;
	        	bestIndex  = i;
        	}
        }
}
*/
bool adaptationNeeded(){
	return sConfig != newConfig;
}</declaration>
		<location id="id44" x="-128" y="64">
			<name x="-216" y="16">NoAdaptationNeeded</name>
			<committed/>
		</location>
		<location id="id45" x="-128" y="-64">
			<name x="-192" y="-128">AdaptationNeeded</name>
			<committed/>
		</location>
		<location id="id46" x="-320" y="0">
			<name x="-304" y="-32">CheckAdaptation</name>
			<committed/>
		</location>
		<location id="id47" x="-320" y="128">
			<name x="-374" y="85">FinishRQVAnalysis</name>
			<urgent/>
		</location>
		<location id="id48" x="-128" y="128">
			<name x="-170" y="85">StartRQVAnalysis</name>
			<committed/>
		</location>
		<location id="id49" x="64" y="0" color="#00ff00">
			<name x="48" y="-128">Wait</name>
		</location>
		<location id="id50" x="-416" y="0">
			<name x="-456" y="-128">Analyzing</name>
			<committed/>
		</location>
		<init ref="id49"/>
		<transition>
			<source ref="id44"/>
			<target ref="id49"/>
			<label kind="synchronisation" x="-96" y="40">noPlanningNeeded!</label>
			<nail x="64" y="64"/>
		</transition>
		<transition>
			<source ref="id45"/>
			<target ref="id49"/>
			<label kind="synchronisation" x="-96" y="-88">startPlanning!</label>
			<nail x="64" y="-64"/>
		</transition>
		<transition>
			<source ref="id46"/>
			<target ref="id44"/>
			<label kind="guard" x="-304" y="40">!adaptationNeeded()</label>
			<nail x="-320" y="64"/>
		</transition>
		<transition>
			<source ref="id46"/>
			<target ref="id45"/>
			<label kind="guard" x="-304" y="-96">adaptationNeeded()</label>
			<nail x="-320" y="-64"/>
		</transition>
		<transition>
			<source ref="id50"/>
			<target ref="id46"/>
			<label kind="assignment" x="-400" y="-32">analyze()</label>
		</transition>
		<transition>
			<source ref="id47"/>
			<target ref="id50"/>
			<label kind="synchronisation" x="-442" y="102">finishRQV?</label>
			<nail x="-480" y="128"/>
			<nail x="-480" y="0"/>
		</transition>
		<transition>
			<source ref="id48"/>
			<target ref="id47"/>
			<label kind="synchronisation" x="-246" y="102">startRQV!</label>
		</transition>
		<transition>
			<source ref="id49"/>
			<target ref="id48"/>
			<label kind="synchronisation" x="-93" y="102">startAnalysis?</label>
			<nail x="152" y="0"/>
			<nail x="152" y="128"/>
		</transition>
	</template>
	<template>
		<name>RQV</name>
		<declaration>void selectData(){
/*
    int i = 0;
    int MW = 1, TA = 2, FA = 3, OS = 4, AS = 5, NS = 6;

    for (MW = 1; MW &lt;= MAX_NUM; MW++){
        for (TA = 1; TA &lt;= MAX_NUM; TA++){
            for (FA = 1; FA &lt;= MAX_NUM; FA++){
                for (OS = 1; OS &lt;= MAX_NUM; OS++){
                    for (AS = 1; AS &lt;= MAX_NUM; AS++){
                        for (NS = 1; NS &lt;= MAX_NUM; NS++){
                            RQVResult[i][MARKET_WATCH] = services[MARKET_WATCH][MW];
                            RQVResult[i][TECHNICAL_ANALYSIS] = services[TECHNICAL_ANALYSIS][TA];
                            RQVResult[i][FUNDAMENTAL_ANALYSIS] = services[FUNDAMENTAL_ANALYSIS][FA];
                            RQVResult[i][ORDER_SERVICE] = services[ORDER_SERVICE][OS];
                            RQVResult[i][ALARM_SERVICE] = services[ALARM_SERVICE][AS];
                            RQVResult[i][NOTIFICATION_SERVICE] = services[NOTIFICATION_SERVICE][NS];
                            i++;
                        }
                    }
                }
            }
        }
    }
*/
}
</declaration>
		<location id="id51" x="128" y="88">
			<urgent/>
		</location>
		<location id="id52" x="232" y="0">
			<urgent/>
		</location>
		<location id="id53" x="-32" y="0">
			<name x="-48" y="-40">Waiting</name>
		</location>
		<init ref="id53"/>
		<transition>
			<source ref="id52"/>
			<target ref="id51"/>
			<label kind="assignment" x="144" y="64">selectData()</label>
			<nail x="232" y="88"/>
		</transition>
		<transition>
			<source ref="id51"/>
			<target ref="id53"/>
			<label kind="synchronisation" x="-24" y="64">finishRQV!</label>
			<nail x="-32" y="88"/>
		</transition>
		<transition>
			<source ref="id53"/>
			<target ref="id52"/>
			<label kind="synchronisation" x="32" y="-24">startRQV?</label>
		</transition>
	</template>
	<template>
		<name>Planning</name>
		<declaration>s_type sType = 1;
int step;
s_id serviceId;
const int DO_NOTHING = -1;//, TURN_ON = 2, TURN_OFF = 3;


int checkServiceConfig(){
    if (sConfig[sType] != newConfig[sType]){
        serviceId = newConfig[sType];
        return sType;
    }
    return -1;
}

void addStep(s_type stepType, s_id serviceId){
    Step step = {stepType, serviceId};
    plan.steps[plan.totalSteps++] = step;
}

void planCompleted(){
    sType = 1;
}

</declaration>
		<location id="id54" x="680" y="-204">
			<name x="629" y="-247">PlanCreated</name>
			<committed/>
		</location>
		<location id="id55" x="476" y="68">
			<committed/>
		</location>
		<location id="id56" x="986" y="68">
			<committed/>
		</location>
		<location id="id57" x="306" y="68">
			<name x="314" y="85">ChangeServiceConfig</name>
			<committed/>
		</location>
		<location id="id58" x="306" y="-204" color="#00ff00">
			<name x="314" y="-238">Waiting</name>
		</location>
		<init ref="id58"/>
		<transition>
			<source ref="id55"/>
			<target ref="id56"/>
			<label kind="guard" x="527" y="161">step == CHANGE_NOTIFICATION_SERVICE</label>
			<label kind="assignment" x="527" y="178">addStep(CHANGE_NOTIFICATION_SERVICE, serviceId)</label>
			<nail x="510" y="204"/>
			<nail x="952" y="204"/>
		</transition>
		<transition>
			<source ref="id56"/>
			<target ref="id54"/>
			<label kind="guard" x="799" y="-229">sType == MAX_TYPE</label>
			<nail x="1054" y="34"/>
			<nail x="1054" y="-204"/>
		</transition>
		<transition>
			<source ref="id55"/>
			<target ref="id56"/>
			<label kind="guard" x="518" y="-110">step == CHANGE_FUNDAMENTAL_ANALYSIS_SERVICE</label>
			<label kind="assignment" x="518" y="-93">addStep(CHANGE_FUNDAMENTAL_ANALYSIS_SERVICE, serviceId)</label>
			<nail x="510" y="-68"/>
			<nail x="952" y="-68"/>
		</transition>
		<transition>
			<source ref="id55"/>
			<target ref="id56"/>
			<label kind="guard" x="527" y="93">step == CHANGE_ALARM_SERVICE</label>
			<label kind="assignment" x="527" y="110">addStep(CHANGE_ALARM_SERVICE, serviceId)</label>
			<nail x="510" y="136"/>
			<nail x="952" y="136"/>
		</transition>
		<transition>
			<source ref="id55"/>
			<target ref="id56"/>
			<label kind="guard" x="527" y="25">step == CHANGE_ORDER_SERVICE</label>
			<label kind="assignment" x="527" y="42">addStep(CHANGE_ORDER_SERVICE, serviceId)</label>
			<nail x="510" y="68"/>
			<nail x="952" y="68"/>
		</transition>
		<transition>
			<source ref="id54"/>
			<target ref="id58"/>
			<label kind="synchronisation" x="433" y="-229">startExecuting!</label>
			<label kind="assignment" x="433" y="-246">planCompleted()</label>
		</transition>
		<transition>
			<source ref="id56"/>
			<target ref="id57"/>
			<label kind="guard" x="671" y="297">sType &lt; MAX_TYPE</label>
			<label kind="assignment" x="671" y="314">sType++</label>
			<nail x="1054" y="102"/>
			<nail x="1054" y="340"/>
			<nail x="306" y="340"/>
		</transition>
		<transition>
			<source ref="id55"/>
			<target ref="id56"/>
			<label kind="guard" x="527" y="246">step == DO_NOTHING</label>
			<nail x="476" y="272"/>
			<nail x="986" y="272"/>
		</transition>
		<transition>
			<source ref="id55"/>
			<target ref="id56"/>
			<label kind="guard" x="518" y="-42">step == CHANGE_TECHNICAL_ANALYSIS_SERVICE</label>
			<label kind="assignment" x="518" y="-25">addStep(CHANGE_TECHNICAL_ANALYSIS_SERVICE, serviceId)</label>
			<nail x="510" y="0"/>
			<nail x="952" y="0"/>
		</transition>
		<transition>
			<source ref="id55"/>
			<target ref="id56"/>
			<label kind="guard" x="518" y="-178">step == CHANGE_MARKET_WATCH_SERVICE</label>
			<label kind="assignment" x="518" y="-161">addStep(CHANGE_MARKET_WATCH_SERVICE, serviceId)</label>
			<nail x="476" y="-136"/>
			<nail x="986" y="-136"/>
		</transition>
		<transition>
			<source ref="id57"/>
			<target ref="id55"/>
			<label kind="assignment" x="323" y="25">step = 
checkServiceConfig()</label>
		</transition>
		<transition>
			<source ref="id58"/>
			<target ref="id57"/>
			<label kind="synchronisation" x="323" y="-110">startPlanning?</label>
		</transition>
	</template>
	<template>
		<name>Execution</name>
		<declaration>int planStep;
//int serviceType;
//int serviceId;
int index;
Step step;

int nextPlanStep(){
    step = plan.steps[index++];
    return step.stepType;
}

int nextPlanServiceType(){
    return step.stepType;
}

int nextPlanServiceId(){
    return step.serviceId;
}

void startExecutingPlan(){
	index = 0;
	serviceType = 0;
}

bool allPlanStepsExecutedF(){
	return index == plan.totalSteps;
}

void resetPlans(){
    plan = initialPlan;
    sConfig = newConfig;
    plan.totalSteps=0;
}</declaration>
		<location id="id59" x="612" y="102">
			<name x="510" y="59">ChangeNotificationService</name>
			<committed/>
		</location>
		<location id="id60" x="850" y="-102">
			<committed/>
		</location>
		<location id="id61" x="612" y="-34">
			<name x="535" y="-76">ChangeOrderService</name>
			<committed/>
		</location>
		<location id="id62" x="612" y="-102">
			<name x="425" y="-153">ChangeFundamentalAnalysisService</name>
			<committed/>
		</location>
		<location id="id63" x="612" y="34">
			<name x="535" y="-8">ChangeAlarmService</name>
			<committed/>
		</location>
		<location id="id64" x="612" y="-170">
			<name x="450" y="-221">ChangeTechnicalAnalysisService</name>
			<committed/>
		</location>
		<location id="id65" x="612" y="-238">
			<name x="484" y="-289">ChangeMarketWatchService</name>
			<committed/>
		</location>
		<location id="id66" x="170" y="-102">
			<name x="52" y="-143">ExecutePlanStep</name>
			<committed/>
		</location>
		<location id="id67" x="170" y="-306">
			<name x="130" y="-354">PlanExecuted</name>
			<committed/>
		</location>
		<location id="id68" x="697" y="-102">
			<name x="858" y="-127">PlanStepExecuted</name>
			<committed/>
		</location>
		<location id="id69" x="-68" y="-102">
			<name x="-52" y="-134">StartExecution</name>
			<committed/>
		</location>
		<location id="id70" x="-68" y="-306">
			<name x="-92" y="-354">Waiting</name>
		</location>
		<init ref="id70"/>
		<transition>
			<source ref="id59"/>
			<target ref="id68"/>
			<nail x="697" y="102"/>
		</transition>
		<transition>
			<source ref="id66"/>
			<target ref="id59"/>
			<label kind="guard" x="212" y="76">planStep == CHANGE_NOTIFICATION_SERVICE</label>
			<nail x="170" y="102"/>
		</transition>
		<transition>
			<source ref="id68"/>
			<target ref="id60"/>
			<label kind="synchronisation" x="731" y="-127">changeService!</label>
		</transition>
		<transition>
			<source ref="id61"/>
			<target ref="id68"/>
			<nail x="663" y="-34"/>
		</transition>
		<transition>
			<source ref="id66"/>
			<target ref="id61"/>
			<label kind="guard" x="212" y="-59">planStep == CHANGE_ORDER_SERVICE</label>
			<nail x="204" y="-34"/>
		</transition>
		<transition>
			<source ref="id62"/>
			<target ref="id68"/>
			<nail x="663" y="-102"/>
		</transition>
		<transition>
			<source ref="id66"/>
			<target ref="id62"/>
			<label kind="guard" x="204" y="-127">planStep == CHANGE_FUNDAMENTAL_ANALYSIS_SERVICE</label>
			<nail x="204" y="-102"/>
		</transition>
		<transition>
			<source ref="id63"/>
			<target ref="id68"/>
			<nail x="671" y="34"/>
		</transition>
		<transition>
			<source ref="id64"/>
			<target ref="id68"/>
			<nail x="663" y="-170"/>
		</transition>
		<transition>
			<source ref="id65"/>
			<target ref="id68"/>
			<nail x="697" y="-238"/>
		</transition>
		<transition>
			<source ref="id66"/>
			<target ref="id63"/>
			<label kind="guard" x="212" y="8">planStep == CHANGE_ALARM_SERVICE</label>
			<nail x="204" y="34"/>
		</transition>
		<transition>
			<source ref="id66"/>
			<target ref="id65"/>
			<label kind="guard" x="204" y="-263">planStep == CHANGE_MARKET_WATCH_SERVICE</label>
			<nail x="170" y="-238"/>
		</transition>
		<transition>
			<source ref="id66"/>
			<target ref="id64"/>
			<label kind="guard" x="204" y="-195">planStep == CHANGE_TECHNICAL_ANALYSIS_SERVICE</label>
			<nail x="204" y="-170"/>
		</transition>
		<transition>
			<source ref="id67"/>
			<target ref="id70"/>
			<label kind="synchronisation" x="-25" y="-348">allPlanStepsExecuted!</label>
			<label kind="assignment" x="-25" y="-331">resetPlans()</label>
		</transition>
		<transition>
			<source ref="id60"/>
			<target ref="id69"/>
			<label kind="guard" x="331" y="136">!allPlanStepsExecutedF()</label>
			<nail x="850" y="170"/>
			<nail x="-68" y="170"/>
		</transition>
		<transition>
			<source ref="id60"/>
			<target ref="id67"/>
			<label kind="guard" x="266" y="-338">allPlanStepsExecutedF()</label>
			<nail x="850" y="-306"/>
		</transition>
		<transition>
			<source ref="id69"/>
			<target ref="id66"/>
			<label kind="assignment" x="-36" y="-102">planStep = nextPlanStep(),
serviceType = nextPlanServiceType(),
serviceId = nextPlanServiceId(),
index++</label>
		</transition>
		<transition>
			<source ref="id70"/>
			<target ref="id69"/>
			<label kind="synchronisation" x="-52" y="-198">startExecuting?</label>
			<label kind="assignment" x="-52" y="-182">startExecutingPlan()</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
/*
MarketWatch1 = AbstractService(MARKET_WATCH, 1);
MarketWatch2 = AbstractService(MARKET_WATCH, 2);
MarketWatch3 = AbstractService(MARKET_WATCH, 3);

FundamentalAnalysis1 = AbstractService(FA, 1);
FundamentalAnalysis2 = AbstractService(FA, 2);
FundamentalAnalysis3 = AbstractService(FA, 3);

TechnicalAnalysis1 = AbstractService(TA, 1);
TechnicalAnalysis2 = AbstractService(TA, 2);
TechnicalAnalysis3 = AbstractService(TA, 3);

OrderService1 = AbstractService(OS, 1);
OrderService2 = AbstractService(OS, 2);
OrderService3 = AbstractService(OS, 3);

AlarmService1 = AbstractService(AS, 1);
AlarmService2 = AbstractService(AS, 2);
AlarmService3 = AbstractService(AS, 3);

NotificationService1 = NotificationService(NS, 1);
NotificationService2 = NotificationService(NS, 2);
NotificationService3 = NotificationService(NS, 3);

system 
MarketWatch1, MarketWatch2, MarketWatch3, FundamentalAnalysis1, FundamentalAnalysis2, FundamentalAnalysis3,
TechnicalAnalysis1, TechnicalAnalysis2, TechnicalAnalysis3, OrderService1, OrderService2, OrderService3,
AlarmService1, AlarmService2, AlarmService3, NotificationService1, NotificationService2, NotificationService3,
Trader, ForexService, AbstractServiceClient, //;
Effector,Probe, 

*/
system
Monitor, Analysis, RQV, Planning, Execution;
</system>
</nta>
