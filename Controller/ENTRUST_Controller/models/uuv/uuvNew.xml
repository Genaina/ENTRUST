<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int SENSORS = 4;
const int NUM_OF_SENSOR_CONFIGS	= 15; //possible sensor configurations

//Structure that keeps the result after RQV (i.e., expected number of accurate measurements + expected power consumption)
typedef struct{
	bool 	sensors[SENSORS];
	int 	speed;
	int 	req1Result; // expected number of accurate measurements
	int 	req2Result; // expected power consumption
}RQVResult;



RQVResult currentConfiguration = {{0,0,0,0},0,-1,-1};

typedef int [0, SENSORS-1]sensor_id;

chan onSensor, offSensor, measurementTaken;
broadcast chan on[sensor_id], off[sensor_id];
chan changeSpeed;
broadcast chan planExecuted, noPlanningRequired, noAnalysisRequired;
int newSpeed, sensorId;

int uuvSpeed = 25, count[sensor_id], empty[sensor_id], mCount[sensor_id], avgRates[sensor_id], currentAvgRates[sensor_id], sId;


chan monitor, startRQV, finishRQV, setAverageRates, startAnalysis, startPlanning, startExecuting;

const int MAX_PLAN = SENSORS + 1;

const int DO_NOTHING = 1, ON_SENSOR = 2, OFF_SENSOR = 3, CHANGE_SPEED = 4;

typedef struct {
int step;
int data;
}PlanStep;

struct{
PlanStep steps[MAX_PLAN];
int stepCount;
}plan;

const int R1 = 2000;
const int R2 = 12000;
//const int NUM_OF_SENSORS = 3;
//const int NUM_OF_SPEED_CONFIGS = 50; // [0,50], discrete steps
const int NUM_OF_SPEED_CONFIGS = 21; // [20,40], discrete steps

RQVResult RQVResultsArray[NUM_OF_SENSOR_CONFIGS * NUM_OF_SPEED_CONFIGS];
RQVResult bestConfiguration;
//RQVResult EMPTY_CONFIG = {{-1,-1,-1},-1,-1,-1};


</declaration>
	<template>
		<name x="5" y="5">Sensor</name>
		<parameter>sensor_id id</parameter>
		<declaration>// Place local declarations here.
</declaration>
		<location id="id0" x="232" y="-40" color="#ffa500">
			<name x="222" y="-70">Off</name>
		</location>
		<location id="id1" x="16" y="-40" color="#00ff00">
			<name x="6" y="-70">On</name>
		</location>
		<init ref="id1"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="synchronisation" x="80" y="-16">on[id]?</label>
			<nail x="232" y="8"/>
			<nail x="16" y="8"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="80" y="-64">off[id]?</label>
		</transition>
	</template>
	<template>
		<name>UUV</name>
		<declaration>
void countMeasurements(){
    count[sId] ++;
}</declaration>
		<location id="id2" x="510" y="-34">
			<name x="467" y="-85">SpeedChanged</name>
			<committed/>
		</location>
		<location id="id3" x="306" y="-34">
			<committed/>
		</location>
		<location id="id4" x="102" y="-34">
			<name x="76" y="-85">Running</name>
		</location>
		<init ref="id4"/>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="assignment" x="323" y="-59">uuvSpeed = newSpeed</label>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id4"/>
			<nail x="476" y="0"/>
			<nail x="136" y="0"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="synchronisation" x="153" y="-59">changeSpeed?</label>
		</transition>
	</template>
	<template>
		<name>Probe</name>
		<declaration>clock x;
const int WAIT_TIME = 9;

//445, 541, 245_1, 245_2,144

int  rates[3][6] = {{5, 4,5,2,2,1},{5, 4,4,4,4,4},{2, 5,1,5,5,4}};
//int  rates[3][4] = {{4,5,2,1},{4,4,4,4},{5,1,5,4}};
int turn = 0;
void sendMeasurements(){
avgRates[0] = 5000;
avgRates[1] = 4000;
avgRates[2] = 4000;
return;
   avgRates[0] = rates[0][turn];
	avgRates[1] = rates[1][turn];
	avgRates[2] = rates[2][turn];
    turn = turn &gt;= 5? 0: turn +1 ;
}
</declaration>
		<location id="id5" x="48" y="-40">
			<committed/>
		</location>
		<location id="id6" x="-224" y="-40" color="#00ff00">
			<label kind="invariant" x="-296" y="-72">x &lt;= WAIT_TIME</label>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id5"/>
			<target ref="id6"/>
			<label kind="assignment" x="-128" y="8">x=0</label>
			<nail x="24" y="0"/>
			<nail x="-208" y="0"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id5"/>
			<label kind="guard" x="-144" y="-96">x &gt;= WAIT_TIME</label>
			<label kind="synchronisation" x="-144" y="-80">setAverageRates!</label>
			<label kind="assignment" x="-152" y="-64">sendMeasurements()</label>
		</transition>
	</template>
	<template>
		<name>Effector</name>
		<location id="id7" x="-184" y="0">
			<committed/>
		</location>
		<location id="id8" x="168" y="0">
			<committed/>
		</location>
		<location id="id9" x="0" y="0">
		</location>
		<init ref="id9"/>
		<transition>
			<source ref="id7"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="-152" y="16">off[sensorId]!</label>
			<nail x="-184" y="40"/>
			<nail x="-24" y="40"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-152" y="-72">offSensor?</label>
			<nail x="-32" y="-48"/>
			<nail x="-184" y="-48"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id9"/>
			<label kind="synchronisation" x="48" y="16">on[sensorId]!</label>
			<nail x="168" y="40"/>
			<nail x="24" y="40"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="48" y="-72">onSensor?</label>
			<nail x="16" y="-48"/>
			<nail x="168" y="-48"/>
		</transition>
	</template>
	<template>
		<name>Monitor</name>
		<declaration>int lastRates[sensor_id];

bool analysisRequired(){
    return currentAvgRates != lastRates;
}

void processData(){
    currentAvgRates = avgRates;
}

void monitorCleanup(){
    lastRates = avgRates;
    for(i:sensor_id)
        avgRates[i] = 0;
}
</declaration>
		<location id="id10" x="-374" y="170">
			<name x="-365" y="127">MonitorFinished</name>
			<committed/>
		</location>
		<location id="id11" x="-136" y="170">
			<name x="-229" y="127">StartAnalysis</name>
			<committed/>
		</location>
		<location id="id12" x="-136" y="34">
			<name x="-161" y="-25">Check</name>
			<committed/>
		</location>
		<location id="id13" x="-374" y="34">
			<name x="-417" y="-25">ProcessSensorData</name>
			<committed/>
		</location>
		<location id="id14" x="-578" y="34">
			<name x="-595" y="-25">Waiting</name>
		</location>
		<init ref="id14"/>
		<transition>
			<source ref="id12"/>
			<target ref="id10"/>
			<label kind="guard" x="-493" y="68">!analysisRequired()</label>
			<label kind="synchronisation" x="-493" y="85">noAnalysisRequired!</label>
			<nail x="-374" y="119"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id14"/>
			<label kind="assignment" x="-552" y="144">monitorCleanup()</label>
			<nail x="-578" y="170"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="guard" x="-272" y="93">analysisRequired()</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id10"/>
			<label kind="synchronisation" x="-306" y="144">startAnalysis!</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id12"/>
			<label kind="assignment" x="-357" y="8">processData()</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id13"/>
			<label kind="synchronisation" x="-548" y="6">setAverageRates?</label>
		</transition>
	</template>
	<template>
		<name>Analyser</name>
		<declaration>
const int MIN = -32767;
const int MAX = 32767;

void analyse(){
		int bestConfigurationResult = MAX;
	    	int index = MIN;
	    	int functionResult = MAX;
	    	int sensorConfig;
		    int speedConfig;
	    	for (sensorConfig=0; sensorConfig&lt;NUM_OF_SENSOR_CONFIGS; sensorConfig++){
	    		for (speedConfig=0; speedConfig&lt;NUM_OF_SPEED_CONFIGS; speedConfig++){
	    			// index = sensorConfig*speedConfig;
                    index = (sensorConfig*NUM_OF_SPEED_CONFIGS) + speedConfig;
	    			if (RQVResultsArray[index].req1Result&gt;R1 &amp;&amp; RQVResultsArray[index].req2Result&lt;R2){ // (r1) is satisfied
	    				functionResult = 1 * RQVResultsArray[index].req2Result + 200000/RQVResultsArray[index].speed;
						if (currentAvgRates[0]&lt;=2000 &amp;&amp; (sensorConfig+1)%2&gt;0) functionResult += 5000;
    					if (currentAvgRates[1]&lt;=2000 &amp;&amp; (sensorConfig+1)%4&gt;1) functionResult += 5000;
    					if (currentAvgRates[2]&lt;=2000 &amp;&amp; (sensorConfig+1)%8&gt;3) functionResult += 5000;
	    				if (functionResult&lt;bestConfigurationResult){// a new best configuration has been found
	    					bestConfigurationResult = functionResult;
	    					bestConfiguration = RQVResultsArray[index];
	    				}
	    			}
	    		}
	    	}
}

bool adaptationRequired(){
	return  bestConfiguration.sensors != currentConfiguration.sensors ||
             bestConfiguration.speed != currentConfiguration.speed;
}

void analyserCleanup(){
}</declaration>
		<location id="id15" x="-510" y="-34">
			<name x="-493" y="-76">AnalysisFinished</name>
			<committed/>
		</location>
		<location id="id16" x="-348" y="-34">
			<name x="-357" y="-76">Adapt</name>
			<committed/>
		</location>
		<location id="id17" x="-144" y="-34">
			<name x="-195" y="-76">Check</name>
			<committed/>
		</location>
		<location id="id18" x="0" y="-170">
			<name x="-64" y="-218">RQVFinished</name>
			<urgent/>
		</location>
		<location id="id19" x="-306" y="-170">
			<name x="-338" y="-210">StartRQV</name>
			<committed/>
		</location>
		<location id="id20" x="-510" y="-170" color="#00ff00">
			<name x="-518" y="-212">Wait</name>
		</location>
		<location id="id21" x="0" y="-34">
			<name x="-59" y="-85">Analyse</name>
			<committed/>
		</location>
		<init ref="id20"/>
		<transition>
			<source ref="id15"/>
			<target ref="id20"/>
			<label kind="assignment" x="-501" y="-136">analyserCleanup()</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id15"/>
			<label kind="synchronisation" x="-476" y="-59">startPlanning!</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id15"/>
			<label kind="guard" x="-323" y="-144">!adaptationRequired()</label>
			<label kind="synchronisation" x="-323" y="-127">noPlanningRequired!</label>
			<nail x="-144" y="-102"/>
			<nail x="-493" y="-102"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id16"/>
			<label kind="guard" x="-314" y="-59">adaptationRequired()</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id17"/>
			<label kind="assignment" x="-110" y="-59">analyse()</label>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="-85" y="-119">finishRQV?</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id18"/>
			<label kind="synchronisation" x="-204" y="-195">startRQV!</label>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id19"/>
			<label kind="synchronisation" x="-476" y="-195">startAnalysis?</label>
		</transition>
	</template>
	<template>
		<name>RQV</name>
		<declaration>
RQVResult test445[NUM_OF_SENSOR_CONFIGS * NUM_OF_SPEED_CONFIGS] = {
{{1,0,0},20,23,71},
{{1,0,0},21,22,67},
{{1,0,0},22,21,64},
{{1,0,0},23,20,62},
{{1,0,0},24,19,59},
{{1,0,0},25,19,57},
{{1,0,0},26,18,54},
{{1,0,0},27,17,52},
{{1,0,0},28,17,51},
{{1,0,0},29,16,49},
{{1,0,0},30,16,47},
{{1,0,0},31,15,46},
{{1,0,0},32,15,44},
{{1,0,0},33,14,43},
{{1,0,0},34,14,42},
{{1,0,0},35,13,40},
{{1,0,0},36,13,39},
{{1,0,0},37,13,38},
{{1,0,0},38,12,37},
{{1,0,0},39,12,36},
{{1,0,0},40,12,35},
{{0,1,0},20,19,50},
{{0,1,0},21,18,48},
{{0,1,0},22,17,47},
{{0,1,0},23,16,45},
{{0,1,0},24,16,44},
{{0,1,0},25,15,43},
{{0,1,0},26,14,41},
{{0,1,0},27,14,40},
{{0,1,0},28,13,39},
{{0,1,0},29,13,38},
{{0,1,0},30,12,37},
{{0,1,0},31,11,37},
{{0,1,0},32,11,36},
{{0,1,0},33,10,35},
{{0,1,0},34,10,34},
{{0,1,0},35,9,34},
{{0,1,0},36,9,33},
{{0,1,0},37,9,33},
{{0,1,0},38,9,32},
{{0,1,0},39,8,32},
{{0,1,0},40,8,31},
{{1,1,0},20,42,119},
{{1,1,0},21,40,114},
{{1,1,0},22,38,109},
{{1,1,0},23,37,105},
{{1,1,0},24,35,101},
{{1,1,0},25,34,97},
{{1,1,0},26,32,94},
{{1,1,0},27,31,91},
{{1,1,0},28,30,88},
{{1,1,0},29,29,85},
{{1,1,0},30,28,83},
{{1,1,0},31,26,80},
{{1,1,0},32,25,78},
{{1,1,0},33,24,76},
{{1,1,0},34,24,74},
{{1,1,0},35,23,72},
{{1,1,0},36,22,71},
{{1,1,0},37,21,69},
{{1,1,0},38,21,67},
{{1,1,0},39,20,66},
{{1,1,0},40,20,64},
{{0,0,1},20,19,26},
{{0,0,1},21,18,25},
{{0,0,1},22,17,24},
{{0,0,1},23,16,24},
{{0,0,1},24,15,23},
{{0,0,1},25,15,22},
{{0,0,1},26,12,22},
{{0,0,1},27,12,21},
{{0,0,1},28,11,21},
{{0,0,1},29,11,20},
{{0,0,1},30,10,20},
{{0,0,1},31,10,19},
{{0,0,1},32,10,19},
{{0,0,1},33,9,19},
{{0,0,1},34,9,18},
{{0,0,1},35,9,18},
{{0,0,1},36,8,18},
{{0,0,1},37,8,17},
{{0,0,1},38,8,17},
{{0,0,1},39,7,17},
{{0,0,1},40,7,17},
{{1,0,1},20,42,95},
{{1,0,1},21,40,91},
{{1,0,1},22,38,87},
{{1,0,1},23,36,83},
{{1,0,1},24,35,80},
{{1,0,1},25,34,77},
{{1,0,1},26,30,74},
{{1,0,1},27,29,72},
{{1,0,1},28,28,69},
{{1,0,1},29,27,67},
{{1,0,1},30,26,65},
{{1,0,1},31,25,63},
{{1,0,1},32,24,61},
{{1,0,1},33,23,59},
{{1,0,1},34,23,58},
{{1,0,1},35,22,56},
{{1,0,1},36,21,55},
{{1,0,1},37,21,54},
{{1,0,1},38,20,52},
{{1,0,1},39,19,51},
{{1,0,1},40,19,50},
{{0,1,1},20,37,74},
{{0,1,1},21,36,72},
{{0,1,1},22,34,69},
{{0,1,1},23,32,67},
{{0,1,1},24,31,65},
{{0,1,1},25,30,63},
{{0,1,1},26,27,61},
{{0,1,1},27,26,59},
{{0,1,1},28,25,58},
{{0,1,1},29,24,56},
{{0,1,1},30,23,55},
{{0,1,1},31,21,54},
{{0,1,1},32,20,53},
{{0,1,1},33,19,52},
{{0,1,1},34,19,51},
{{0,1,1},35,18,50},
{{0,1,1},36,17,49},
{{0,1,1},37,17,48},
{{0,1,1},38,16,47},
{{0,1,1},39,16,46},
{{0,1,1},40,15,46},
{{1,1,1},20,61,143},
{{1,1,1},21,58,137},
{{1,1,1},22,55,131},
{{1,1,1},23,53,126},
{{1,1,1},24,51,122},
{{1,1,1},25,48,117},
{{1,1,1},26,45,113},
{{1,1,1},27,43,110},
{{1,1,1},28,41,106},
{{1,1,1},29,40,103},
{{1,1,1},30,38,100},
{{1,1,1},31,36,98},
{{1,1,1},32,35,95},
{{1,1,1},33,34,93},
{{1,1,1},34,32,90},
{{1,1,1},35,31,88},
{{1,1,1},36,30,86},
{{1,1,1},37,29,84},
{{1,1,1},38,29,82},
{{1,1,1},39,28,81},
{{1,1,1},40,27,79}
};


RQVResult test245_1[NUM_OF_SENSOR_CONFIGS * NUM_OF_SPEED_CONFIGS] = {
{{1,0,0},20,23,71},
{{1,0,0},21,22,67},
{{1,0,0},22,21,64},
{{1,0,0},23,20,62},
{{1,0,0},24,19,59},
{{1,0,0},25,19,57},
{{1,0,0},26,18,54},
{{1,0,0},27,17,52},
{{1,0,0},28,17,51},
{{1,0,0},29,16,49},
{{1,0,0},30,16,47},
{{1,0,0},31,15,46},
{{1,0,0},32,15,44},
{{1,0,0},33,14,43},
{{1,0,0},34,14,42},
{{1,0,0},35,13,40},
{{1,0,0},36,13,39},
{{1,0,0},37,13,38},
{{1,0,0},38,12,37},
{{1,0,0},39,12,36},
{{1,0,0},40,12,35},
{{0,1,0},20,19,50},
{{0,1,0},21,18,48},
{{0,1,0},22,17,47},
{{0,1,0},23,16,45},
{{0,1,0},24,16,44},
{{0,1,0},25,15,43},
{{0,1,0},26,14,41},
{{0,1,0},27,14,40},
{{0,1,0},28,13,39},
{{0,1,0},29,13,38},
{{0,1,0},30,12,37},
{{0,1,0},31,11,37},
{{0,1,0},32,11,36},
{{0,1,0},33,10,35},
{{0,1,0},34,10,34},
{{0,1,0},35,9,34},
{{0,1,0},36,9,33},
{{0,1,0},37,9,33},
{{0,1,0},38,9,32},
{{0,1,0},39,8,32},
{{0,1,0},40,8,31},
{{1,1,0},20,42,119},
{{1,1,0},21,40,114},
{{1,1,0},22,38,109},
{{1,1,0},23,37,105},
{{1,1,0},24,35,101},
{{1,1,0},25,34,97},
{{1,1,0},26,32,94},
{{1,1,0},27,31,91},
{{1,1,0},28,30,88},
{{1,1,0},29,29,85},
{{1,1,0},30,28,83},
{{1,1,0},31,26,80},
{{1,1,0},32,25,78},
{{1,1,0},33,24,76},
{{1,1,0},34,24,74},
{{1,1,0},35,23,72},
{{1,1,0},36,22,71},
{{1,1,0},37,21,69},
{{1,1,0},38,21,67},
{{1,1,0},39,20,66},
{{1,1,0},40,20,64},
{{0,0,1},20,10,17},
{{0,0,1},21,9,16},
{{0,0,1},22,9,16},
{{0,0,1},23,8,15},
{{0,0,1},24,8,15},
{{0,0,1},25,8,15},
{{0,0,1},26,6,15},
{{0,0,1},27,6,14},
{{0,0,1},28,6,14},
{{0,0,1},29,6,14},
{{0,0,1},30,5,14},
{{0,0,1},31,5,13},
{{0,0,1},32,5,13},
{{0,0,1},33,5,13},
{{0,0,1},34,5,13},
{{0,0,1},35,4,13},
{{0,0,1},36,4,12},
{{0,0,1},37,4,12},
{{0,0,1},38,4,12},
{{0,0,1},39,4,12},
{{0,0,1},40,4,12},
{{1,0,1},20,33,86},
{{1,0,1},21,31,82},
{{1,0,1},22,30,78},
{{1,0,1},23,29,75},
{{1,0,1},24,27,72},
{{1,0,1},25,26,69},
{{1,0,1},26,24,67},
{{1,0,1},27,23,65},
{{1,0,1},28,22,63},
{{1,0,1},29,22,61},
{{1,0,1},30,21,59},
{{1,0,1},31,20,57},
{{1,0,1},32,19,55},
{{1,0,1},33,19,54},
{{1,0,1},34,18,52},
{{1,0,1},35,18,51},
{{1,0,1},36,17,50},
{{1,0,1},37,17,49},
{{1,0,1},38,16,47},
{{1,0,1},39,16,46},
{{1,0,1},40,15,45},
{{0,1,1},20,28,65},
{{0,1,1},21,27,63},
{{0,1,1},22,26,61},
{{0,1,1},23,25,59},
{{0,1,1},24,24,57},
{{0,1,1},25,23,55},
{{0,1,1},26,21,54},
{{0,1,1},27,20,53},
{{0,1,1},28,19,51},
{{0,1,1},29,18,50},
{{0,1,1},30,18,49},
{{0,1,1},31,16,48},
{{0,1,1},32,15,47},
{{0,1,1},33,15,46},
{{0,1,1},34,14,45},
{{0,1,1},35,14,44},
{{0,1,1},36,13,44},
{{0,1,1},37,13,43},
{{0,1,1},38,12,42},
{{0,1,1},39,12,42},
{{0,1,1},40,12,41},
{{1,1,1},20,52,134},
{{1,1,1},21,49,128},
{{1,1,1},22,47,123},
{{1,1,1},23,45,118},
{{1,1,1},24,43,114},
{{1,1,1},25,41,110},
{{1,1,1},26,39,106},
{{1,1,1},27,37,103},
{{1,1,1},28,36,100},
{{1,1,1},29,34,97},
{{1,1,1},30,33,94},
{{1,1,1},31,31,92},
{{1,1,1},32,30,89},
{{1,1,1},33,29,87},
{{1,1,1},34,28,85},
{{1,1,1},35,27,83},
{{1,1,1},36,26,81},
{{1,1,1},37,25,79},
{{1,1,1},38,25,77},
{{1,1,1},39,24,76},
{{1,1,1},40,23,74}
};


RQVResult test245_2[NUM_OF_SENSOR_CONFIGS * NUM_OF_SPEED_CONFIGS] = {
{{1,0,0},20,23,71},
{{1,0,0},21,22,67},
{{1,0,0},22,21,64},
{{1,0,0},23,20,62},
{{1,0,0},24,19,59},
{{1,0,0},25,19,57},
{{1,0,0},26,18,54},
{{1,0,0},27,17,52},
{{1,0,0},28,17,51},
{{1,0,0},29,16,49},
{{1,0,0},30,16,47},
{{1,0,0},31,15,46},
{{1,0,0},32,15,44},
{{1,0,0},33,14,43},
{{1,0,0},34,14,42},
{{1,0,0},35,13,40},
{{1,0,0},36,13,39},
{{1,0,0},37,13,38},
{{1,0,0},38,12,37},
{{1,0,0},39,12,36},
{{1,0,0},40,12,35},
{{0,1,0},20,19,50},
{{0,1,0},21,18,48},
{{0,1,0},22,17,47},
{{0,1,0},23,16,45},
{{0,1,0},24,16,44},
{{0,1,0},25,15,43},
{{0,1,0},26,14,41},
{{0,1,0},27,14,40},
{{0,1,0},28,13,39},
{{0,1,0},29,13,38},
{{0,1,0},30,12,37},
{{0,1,0},31,11,37},
{{0,1,0},32,11,36},
{{0,1,0},33,10,35},
{{0,1,0},34,10,34},
{{0,1,0},35,9,34},
{{0,1,0},36,9,33},
{{0,1,0},37,9,33},
{{0,1,0},38,9,32},
{{0,1,0},39,8,32},
{{0,1,0},40,8,31},
{{1,1,0},20,42,119},
{{1,1,0},21,40,114},
{{1,1,0},22,38,109},
{{1,1,0},23,37,105},
{{1,1,0},24,35,101},
{{1,1,0},25,34,97},
{{1,1,0},26,32,94},
{{1,1,0},27,31,91},
{{1,1,0},28,30,88},
{{1,1,0},29,29,85},
{{1,1,0},30,28,83},
{{1,1,0},31,26,80},
{{1,1,0},32,25,78},
{{1,1,0},33,24,76},
{{1,1,0},34,24,74},
{{1,1,0},35,23,72},
{{1,1,0},36,22,71},
{{1,1,0},37,21,69},
{{1,1,0},38,21,67},
{{1,1,0},39,20,66},
{{1,1,0},40,20,64},
{{0,0,1},20,10,17},
{{0,0,1},21,9,16},
{{0,0,1},22,9,16},
{{0,0,1},23,8,15},
{{0,0,1},24,8,15},
{{0,0,1},25,8,15},
{{0,0,1},26,6,15},
{{0,0,1},27,6,14},
{{0,0,1},28,6,14},
{{0,0,1},29,6,14},
{{0,0,1},30,5,14},
{{0,0,1},31,5,13},
{{0,0,1},32,5,13},
{{0,0,1},33,5,13},
{{0,0,1},34,5,13},
{{0,0,1},35,4,13},
{{0,0,1},36,4,12},
{{0,0,1},37,4,12},
{{0,0,1},38,4,12},
{{0,0,1},39,4,12},
{{0,0,1},40,4,12},
{{1,0,1},20,33,86},
{{1,0,1},21,31,82},
{{1,0,1},22,30,78},
{{1,0,1},23,29,75},
{{1,0,1},24,27,72},
{{1,0,1},25,26,69},
{{1,0,1},26,24,67},
{{1,0,1},27,23,65},
{{1,0,1},28,22,63},
{{1,0,1},29,22,61},
{{1,0,1},30,21,59},
{{1,0,1},31,20,57},
{{1,0,1},32,19,55},
{{1,0,1},33,19,54},
{{1,0,1},34,18,52},
{{1,0,1},35,18,51},
{{1,0,1},36,17,50},
{{1,0,1},37,17,49},
{{1,0,1},38,16,47},
{{1,0,1},39,16,46},
{{1,0,1},40,15,45},
{{0,1,1},20,28,65},
{{0,1,1},21,27,63},
{{0,1,1},22,26,61},
{{0,1,1},23,25,59},
{{0,1,1},24,24,57},
{{0,1,1},25,23,55},
{{0,1,1},26,21,54},
{{0,1,1},27,20,53},
{{0,1,1},28,19,51},
{{0,1,1},29,18,50},
{{0,1,1},30,18,49},
{{0,1,1},31,16,48},
{{0,1,1},32,15,47},
{{0,1,1},33,15,46},
{{0,1,1},34,14,45},
{{0,1,1},35,14,44},
{{0,1,1},36,13,44},
{{0,1,1},37,13,43},
{{0,1,1},38,12,42},
{{0,1,1},39,12,42},
{{0,1,1},40,12,41},
{{1,1,1},20,52,134},
{{1,1,1},21,49,128},
{{1,1,1},22,47,123},
{{1,1,1},23,45,118},
{{1,1,1},24,43,114},
{{1,1,1},25,41,110},
{{1,1,1},26,39,106},
{{1,1,1},27,37,103},
{{1,1,1},28,36,100},
{{1,1,1},29,34,97},
{{1,1,1},30,33,94},
{{1,1,1},31,31,92},
{{1,1,1},32,30,89},
{{1,1,1},33,29,87},
{{1,1,1},34,28,85},
{{1,1,1},35,27,83},
{{1,1,1},36,26,81},
{{1,1,1},37,25,79},
{{1,1,1},38,25,77},
{{1,1,1},39,24,76},
{{1,1,1},40,23,74}
};

RQVResult test144[NUM_OF_SENSOR_CONFIGS * NUM_OF_SPEED_CONFIGS] = {
{{1,0,0},20,19,57},
{{1,0,0},21,18,55},
{{1,0,0},22,17,52},
{{1,0,0},23,16,50},
{{1,0,0},24,16,48},
{{1,0,0},25,15,46},
{{1,0,0},26,15,44},
{{1,0,0},27,14,42},
{{1,0,0},28,13,41},
{{1,0,0},29,13,39},
{{1,0,0},30,13,38},
{{1,0,0},31,12,37},
{{1,0,0},32,12,36},
{{1,0,0},33,11,35},
{{1,0,0},34,11,34},
{{1,0,0},35,11,33},
{{1,0,0},36,10,32},
{{1,0,0},37,10,31},
{{1,0,0},38,10,30},
{{1,0,0},39,10,29},
{{1,0,0},40,9,29},
{{0,1,0},20,19,50},
{{0,1,0},21,18,48},
{{0,1,0},22,17,47},
{{0,1,0},23,16,45},
{{0,1,0},24,16,44},
{{0,1,0},25,15,43},
{{0,1,0},26,14,41},
{{0,1,0},27,14,40},
{{0,1,0},28,13,39},
{{0,1,0},29,13,38},
{{0,1,0},30,12,37},
{{0,1,0},31,11,37},
{{0,1,0},32,11,36},
{{0,1,0},33,10,35},
{{0,1,0},34,10,34},
{{0,1,0},35,9,34},
{{0,1,0},36,9,33},
{{0,1,0},37,9,33},
{{0,1,0},38,9,32},
{{0,1,0},39,8,32},
{{0,1,0},40,8,31},
{{1,1,0},20,38,105},
{{1,1,0},21,36,101},
{{1,1,0},22,34,97},
{{1,1,0},23,33,93},
{{1,1,0},24,31,90},
{{1,1,0},25,30,86},
{{1,1,0},26,29,83},
{{1,1,0},27,28,81},
{{1,1,0},28,27,78},
{{1,1,0},29,26,76},
{{1,1,0},30,25,74},
{{1,1,0},31,23,72},
{{1,1,0},32,22,70},
{{1,1,0},33,22,68},
{{1,1,0},34,21,66},
{{1,1,0},35,20,65},
{{1,1,0},36,20,63},
{{1,1,0},37,19,62},
{{1,1,0},38,18,60},
{{1,1,0},39,18,59},
{{1,1,0},40,17,58},
{{0,0,1},20,5,12},
{{0,0,1},21,5,12},
{{0,0,1},22,4,11},
{{0,0,1},23,4,11},
{{0,0,1},24,4,11},
{{0,0,1},25,4,11},
{{0,0,1},26,3,11},
{{0,0,1},27,3,11},
{{0,0,1},28,3,11},
{{0,0,1},29,3,10},
{{0,0,1},30,3,10},
{{0,0,1},31,3,10},
{{0,0,1},32,2,10},
{{0,0,1},33,2,10},
{{0,0,1},34,2,10},
{{0,0,1},35,2,10},
{{0,0,1},36,2,10},
{{0,0,1},37,2,10},
{{0,0,1},38,2,10},
{{0,0,1},39,2,10},
{{0,0,1},40,2,9},
{{1,0,1},20,24,67},
{{1,0,1},21,23,64},
{{1,0,1},22,22,62},
{{1,0,1},23,21,59},
{{1,0,1},24,20,57},
{{1,0,1},25,19,55},
{{1,0,1},26,18,53},
{{1,0,1},27,17,51},
{{1,0,1},28,16,49},
{{1,0,1},29,16,48},
{{1,0,1},30,15,46},
{{1,0,1},31,15,45},
{{1,0,1},32,14,44},
{{1,0,1},33,14,43},
{{1,0,1},34,13,42},
{{1,0,1},35,13,41},
{{1,0,1},36,13,40},
{{1,0,1},37,12,39},
{{1,0,1},38,12,38},
{{1,0,1},39,12,37},
{{1,0,1},40,11,36},
{{0,1,1},20,24,60},
{{0,1,1},21,22,58},
{{0,1,1},22,21,56},
{{0,1,1},23,20,54},
{{0,1,1},24,20,53},
{{0,1,1},25,19,51},
{{0,1,1},26,18,50},
{{0,1,1},27,17,49},
{{0,1,1},28,16,48},
{{0,1,1},29,16,47},
{{0,1,1},30,15,46},
{{0,1,1},31,14,45},
{{0,1,1},32,13,44},
{{0,1,1},33,13,43},
{{0,1,1},34,12,42},
{{0,1,1},35,12,42},
{{0,1,1},36,11,41},
{{0,1,1},37,11,40},
{{0,1,1},38,11,40},
{{0,1,1},39,10,39},
{{0,1,1},40,10,39},
{{1,1,1},20,43,115},
{{1,1,1},21,40,111},
{{1,1,1},22,39,106},
{{1,1,1},23,37,102},
{{1,1,1},24,35,99},
{{1,1,1},25,34,95},
{{1,1,1},26,32,92},
{{1,1,1},27,31,89},
{{1,1,1},28,30,87},
{{1,1,1},29,29,84},
{{1,1,1},30,28,82},
{{1,1,1},31,26,80},
{{1,1,1},32,25,78},
{{1,1,1},33,24,76},
{{1,1,1},34,23,74},
{{1,1,1},35,22,72},
{{1,1,1},36,22,71},
{{1,1,1},37,21,69},
{{1,1,1},38,20,68},
{{1,1,1},39,20,66},
{{1,1,1},40,19,65}
};

RQVResult test541[NUM_OF_SENSOR_CONFIGS * NUM_OF_SPEED_CONFIGS] = {
{{1,0,0},20,5,16},
{{1,0,0},21,5,15},
{{1,0,0},22,4,14},
{{1,0,0},23,4,14},
{{1,0,0},24,4,13},
{{1,0,0},25,4,13},
{{1,0,0},26,4,12},
{{1,0,0},27,4,12},
{{1,0,0},28,3,12},
{{1,0,0},29,3,11},
{{1,0,0},30,3,11},
{{1,0,0},31,3,11},
{{1,0,0},32,3,10},
{{1,0,0},33,3,10},
{{1,0,0},34,3,10},
{{1,0,0},35,3,9},
{{1,0,0},36,3,9},
{{1,0,0},37,3,9},
{{1,0,0},38,3,9},
{{1,0,0},39,3,9},
{{1,0,0},40,2,8},
{{0,1,0},20,19,51},
{{0,1,0},21,18,49},
{{0,1,0},22,17,48},
{{0,1,0},23,16,46},
{{0,1,0},24,16,45},
{{0,1,0},25,15,44},
{{0,1,0},26,14,42},
{{0,1,0},27,14,41},
{{0,1,0},28,13,40},
{{0,1,0},29,13,39},
{{0,1,0},30,12,38},
{{0,1,0},31,11,38},
{{0,1,0},32,11,37},
{{0,1,0},33,10,36},
{{0,1,0},34,10,35},
{{0,1,0},35,9,35},
{{0,1,0},36,9,34},
{{0,1,0},37,9,34},
{{0,1,0},38,9,33},
{{0,1,0},39,8,33},
{{0,1,0},40,8,32},
{{1,1,0},20,24,64},
{{1,1,0},21,23,61},
{{1,1,0},22,21,59},
{{1,1,0},23,21,57},
{{1,1,0},24,20,55},
{{1,1,0},25,19,53},
{{1,1,0},26,18,52},
{{1,1,0},27,17,50},
{{1,1,0},28,17,49},
{{1,1,0},29,16,48},
{{1,1,0},30,16,46},
{{1,1,0},31,14,45},
{{1,1,0},32,14,44},
{{1,1,0},33,13,43},
{{1,1,0},34,13,42},
{{1,1,0},35,12,41},
{{1,1,0},36,12,40},
{{1,1,0},37,11,40},
{{1,1,0},38,11,39},
{{1,1,0},39,11,38},
{{1,1,0},40,10,37},
{{0,0,1},20,23,26},
{{0,0,1},21,22,24},
{{0,0,1},22,21,23},
{{0,0,1},23,20,23},
{{0,0,1},24,19,22},
{{0,0,1},25,18,21},
{{0,0,1},26,15,20},
{{0,0,1},27,15,19},
{{0,0,1},28,14,19},
{{0,0,1},29,13,18},
{{0,0,1},30,13,18},
{{0,0,1},31,12,17},
{{0,0,1},32,12,17},
{{0,0,1},33,11,16},
{{0,0,1},34,11,16},
{{0,0,1},35,11,15},
{{0,0,1},36,10,15},
{{0,0,1},37,10,15},
{{0,0,1},38,10,14},
{{0,0,1},39,9,14},
{{0,0,1},40,9,14},
{{1,0,1},20,28,38},
{{1,0,1},21,27,37},
{{1,0,1},22,25,35},
{{1,0,1},23,24,33},
{{1,0,1},24,23,32},
{{1,0,1},25,22,31},
{{1,0,1},26,19,30},
{{1,0,1},27,18,28},
{{1,0,1},28,17,27},
{{1,0,1},29,17,26},
{{1,0,1},30,16,26},
{{1,0,1},31,15,25},
{{1,0,1},32,15,24},
{{1,0,1},33,14,23},
{{1,0,1},34,14,23},
{{1,0,1},35,13,22},
{{1,0,1},36,13,21},
{{1,0,1},37,13,21},
{{1,0,1},38,12,20},
{{1,0,1},39,12,20},
{{1,0,1},40,11,19},
{{0,1,1},20,42,74},
{{0,1,1},21,40,71},
{{0,1,1},22,38,68},
{{0,1,1},23,36,66},
{{0,1,1},24,35,63},
{{0,1,1},25,33,61},
{{0,1,1},26,30,59},
{{0,1,1},27,28,58},
{{0,1,1},28,27,56},
{{0,1,1},29,26,55},
{{0,1,1},30,25,53},
{{0,1,1},31,23,52},
{{0,1,1},32,22,51},
{{0,1,1},33,22,49},
{{0,1,1},34,21,48},
{{0,1,1},35,20,47},
{{0,1,1},36,19,46},
{{0,1,1},37,19,45},
{{0,1,1},38,18,44},
{{0,1,1},39,17,44},
{{0,1,1},40,17,43},
{{1,1,1},20,47,87},
{{1,1,1},21,44,83},
{{1,1,1},22,42,80},
{{1,1,1},23,41,77},
{{1,1,1},24,39,74},
{{1,1,1},25,37,71},
{{1,1,1},26,33,69},
{{1,1,1},27,32,67},
{{1,1,1},28,31,65},
{{1,1,1},29,30,63},
{{1,1,1},30,29,61},
{{1,1,1},31,26,59},
{{1,1,1},32,25,58},
{{1,1,1},33,25,56},
{{1,1,1},34,24,55},
{{1,1,1},35,23,54},
{{1,1,1},36,22,53},
{{1,1,1},37,21,51},
{{1,1,1},38,21,50},
{{1,1,1},39,20,49},
{{1,1,1},40,19,48}
};

RQVResult test542[NUM_OF_SENSOR_CONFIGS * NUM_OF_SPEED_CONFIGS] = {
{{1,0,0},20,23,71},
{{1,0,0},21,22,67},
{{1,0,0},22,21,64},
{{1,0,0},23,20,62},
{{1,0,0},24,19,59},
{{1,0,0},25,19,57},
{{1,0,0},26,18,54},
{{1,0,0},27,17,52},
{{1,0,0},28,17,51},
{{1,0,0},29,16,49},
{{1,0,0},30,16,47},
{{1,0,0},31,15,46},
{{1,0,0},32,15,44},
{{1,0,0},33,14,43},
{{1,0,0},34,14,42},
{{1,0,0},35,13,40},
{{1,0,0},36,13,39},
{{1,0,0},37,13,38},
{{1,0,0},38,12,37},
{{1,0,0},39,12,36},
{{1,0,0},40,12,35},
{{0,1,0},20,19,50},
{{0,1,0},21,18,48},
{{0,1,0},22,17,47},
{{0,1,0},23,16,45},
{{0,1,0},24,16,44},
{{0,1,0},25,15,43},
{{0,1,0},26,14,41},
{{0,1,0},27,14,40},
{{0,1,0},28,13,39},
{{0,1,0},29,13,38},
{{0,1,0},30,12,37},
{{0,1,0},31,11,37},
{{0,1,0},32,11,36},
{{0,1,0},33,10,35},
{{0,1,0},34,10,34},
{{0,1,0},35,9,34},
{{0,1,0},36,9,33},
{{0,1,0},37,9,33},
{{0,1,0},38,9,32},
{{0,1,0},39,8,32},
{{0,1,0},40,8,31},
{{1,1,0},20,42,119},
{{1,1,0},21,40,114},
{{1,1,0},22,38,109},
{{1,1,0},23,37,105},
{{1,1,0},24,35,101},
{{1,1,0},25,34,97},
{{1,1,0},26,32,94},
{{1,1,0},27,31,91},
{{1,1,0},28,30,88},
{{1,1,0},29,29,85},
{{1,1,0},30,28,83},
{{1,1,0},31,26,80},
{{1,1,0},32,25,78},
{{1,1,0},33,24,76},
{{1,1,0},34,24,74},
{{1,1,0},35,23,72},
{{1,1,0},36,22,71},
{{1,1,0},37,21,69},
{{1,1,0},38,21,67},
{{1,1,0},39,20,66},
{{1,1,0},40,20,64},
{{0,0,1},20,10,17},
{{0,0,1},21,9,16},
{{0,0,1},22,9,16},
{{0,0,1},23,8,15},
{{0,0,1},24,8,15},
{{0,0,1},25,8,15},
{{0,0,1},26,6,15},
{{0,0,1},27,6,14},
{{0,0,1},28,6,14},
{{0,0,1},29,6,14},
{{0,0,1},30,5,14},
{{0,0,1},31,5,13},
{{0,0,1},32,5,13},
{{0,0,1},33,5,13},
{{0,0,1},34,5,13},
{{0,0,1},35,4,13},
{{0,0,1},36,4,12},
{{0,0,1},37,4,12},
{{0,0,1},38,4,12},
{{0,0,1},39,4,12},
{{0,0,1},40,4,12},
{{1,0,1},20,33,86},
{{1,0,1},21,31,82},
{{1,0,1},22,30,78},
{{1,0,1},23,29,75},
{{1,0,1},24,27,72},
{{1,0,1},25,26,69},
{{1,0,1},26,24,67},
{{1,0,1},27,23,65},
{{1,0,1},28,22,63},
{{1,0,1},29,22,61},
{{1,0,1},30,21,59},
{{1,0,1},31,20,57},
{{1,0,1},32,19,55},
{{1,0,1},33,19,54},
{{1,0,1},34,18,52},
{{1,0,1},35,18,51},
{{1,0,1},36,17,50},
{{1,0,1},37,17,49},
{{1,0,1},38,16,47},
{{1,0,1},39,16,46},
{{1,0,1},40,15,45},
{{0,1,1},20,28,65},
{{0,1,1},21,27,63},
{{0,1,1},22,26,61},
{{0,1,1},23,25,59},
{{0,1,1},24,24,57},
{{0,1,1},25,23,55},
{{0,1,1},26,21,54},
{{0,1,1},27,20,53},
{{0,1,1},28,19,51},
{{0,1,1},29,18,50},
{{0,1,1},30,18,49},
{{0,1,1},31,16,48},
{{0,1,1},32,15,47},
{{0,1,1},33,15,46},
{{0,1,1},34,14,45},
{{0,1,1},35,14,44},
{{0,1,1},36,13,44},
{{0,1,1},37,13,43},
{{0,1,1},38,12,42},
{{0,1,1},39,12,42},
{{0,1,1},40,12,41},
{{1,1,1},20,52,134},
{{1,1,1},21,49,128},
{{1,1,1},22,47,123},
{{1,1,1},23,45,118},
{{1,1,1},24,43,114},
{{1,1,1},25,41,110},
{{1,1,1},26,39,106},
{{1,1,1},27,37,103},
{{1,1,1},28,36,100},
{{1,1,1},29,34,97},
{{1,1,1},30,33,94},
{{1,1,1},31,31,92},
{{1,1,1},32,30,89},
{{1,1,1},33,29,87},
{{1,1,1},34,28,85},
{{1,1,1},35,27,83},
{{1,1,1},36,26,81},
{{1,1,1},37,25,79},
{{1,1,1},38,25,77},
{{1,1,1},39,24,76},
{{1,1,1},40,23,74}
};

RQVResult test544[NUM_OF_SENSOR_CONFIGS * NUM_OF_SPEED_CONFIGS] = {
{{1,0,0},200,2118,8075},
{{1,0,0},210,2006,7738},
{{1,0,0},220,1904,7432},
{{1,0,0},229,1811,7152},
{{1,0,0},240,1725,6896},
{{1,0,0},250,1647,6660},
{{1,0,0},260,1574,6442},
{{1,0,0},270,1507,6240},
{{1,0,0},280,1445,6053},
{{1,0,0},290,1386,5879},
{{1,0,0},300,1332,5716},
{{1,0,0},310,1282,5564},
{{1,0,0},320,1234,5422},
{{1,0,0},330,1189,5288},
{{1,0,0},340,1147,5161},
{{1,0,0},350,1108,5043},
{{1,0,0},360,1070,4930},
{{1,0,0},370,1035,4824},
{{1,0,0},380,1001,4723},
{{1,0,0},390,970,4628},
{{1,0,0},400,939,4537},
{{0,1,0},200,1638,5380},
{{0,1,0},210,1547,5162},
{{0,1,0},220,1464,4963},
{{0,1,0},229,1389,4782},
{{0,1,0},240,1320,4616},
{{0,1,0},250,1256,4464},
{{0,1,0},260,1198,4323},
{{0,1,0},270,1143,4192},
{{0,1,0},280,1093,4071},
{{0,1,0},290,1046,3958},
{{0,1,0},300,1002,3853},
{{0,1,0},310,961,3754},
{{0,1,0},320,922,3662},
{{0,1,0},330,886,3575},
{{0,1,0},340,852,3494},
{{0,1,0},350,820,3417},
{{0,1,0},360,790,3344},
{{0,1,0},370,761,3275},
{{0,1,0},380,734,3210},
{{0,1,0},390,709,3148},
{{0,1,0},400,684,3090},
{{1,1,0},200,3756,13455},
{{1,1,0},210,3553,12900},
{{1,1,0},220,3368,12395},
{{1,1,0},229,3200,11934},
{{1,1,0},240,3045,11512},
{{1,1,0},250,2903,11123},
{{1,1,0},260,2772,10765},
{{1,1,0},270,2650,10433},
{{1,1,0},280,2537,10124},
{{1,1,0},290,2432,9837},
{{1,1,0},300,2334,9569},
{{1,1,0},310,2243,9319},
{{1,1,0},320,2157,9084},
{{1,1,0},330,2076,8863},
{{1,1,0},340,2000,8655},
{{1,1,0},350,1928,8459},
{{1,1,0},360,1860,8274},
{{1,1,0},370,1796,8099},
{{1,1,0},380,1736,7933},
{{1,1,0},390,1678,7776},
{{1,1,0},400,1624,7627},
{{0,0,1},200,1485,4507},
{{0,0,1},210,1395,4316},
{{0,0,1},220,1312,4143},
{{0,0,1},229,1237,3984},
{{0,0,1},240,1168,3839},
{{0,0,1},250,1104,3706},
{{0,0,1},260,1045,3582},
{{0,0,1},270,991,3468},
{{0,0,1},280,941,3362},
{{0,0,1},290,894,3263},
{{0,0,1},300,850,3171},
{{0,0,1},310,809,3085},
{{0,0,1},320,770,3004},
{{0,0,1},330,734,2928},
{{0,0,1},340,700,2857},
{{0,0,1},350,668,2790},
{{0,0,1},360,638,2726},
{{0,0,1},370,609,2666},
{{0,0,1},380,582,2609},
{{0,0,1},390,557,2555},
{{0,0,1},400,532,2503},
{{1,0,1},200,3604,12582},
{{1,0,1},210,3401,12054},
{{1,0,1},220,3216,11575},
{{1,0,1},229,3047,11136},
{{1,0,1},240,2893,10735},
{{1,0,1},250,2751,10365},
{{1,0,1},260,2619,10024},
{{1,0,1},270,2498,9709},
{{1,0,1},280,2385,9415},
{{1,0,1},290,2280,9143},
{{1,0,1},300,2182,8888},
{{1,0,1},310,2090,8649},
{{1,0,1},320,2004,8426},
{{1,0,1},330,1924,8216},
{{1,0,1},340,1848,8018},
{{1,0,1},350,1776,7832},
{{1,0,1},360,1708,7656},
{{1,0,1},370,1644,7490},
{{1,0,1},380,1584,7332},
{{1,0,1},390,1526,7183},
{{1,0,1},400,1472,7041},
{{0,1,1},200,3123,9887},
{{0,1,1},210,2941,9478},
{{0,1,1},220,2776,9106},
{{0,1,1},229,2626,8767},
{{0,1,1},240,2487,8456},
{{0,1,1},250,2360,8169},
{{0,1,1},260,2243,7905},
{{0,1,1},270,2134,7660},
{{0,1,1},280,2033,7433},
{{0,1,1},290,1939,7222},
{{0,1,1},300,1852,7024},
{{0,1,1},310,1770,6840},
{{0,1,1},320,1693,6666},
{{0,1,1},330,1621,6504},
{{0,1,1},340,1553,6351},
{{0,1,1},350,1488,6206},
{{0,1,1},360,1428,6070},
{{0,1,1},370,1371,5941},
{{0,1,1},380,1317,5819},
{{0,1,1},390,1265,5703},
{{0,1,1},400,1216,5593},
{{1,1,1},200,5241,17962},
{{1,1,1},210,4947,17216},
{{1,1,1},220,4680,16538},
{{1,1,1},229,4436,15919},
{{1,1,1},240,4213,15351},
{{1,1,1},250,4007,14829},
{{1,1,1},260,3817,14347},
{{1,1,1},270,3641,13901},
{{1,1,1},280,3478,13487},
{{1,1,1},290,3326,13101},
{{1,1,1},300,3184,12741},
{{1,1,1},310,3051,12404},
{{1,1,1},320,2927,12088},
{{1,1,1},330,2810,11791},
{{1,1,1},340,2700,11512},
{{1,1,1},350,2596,11249},
{{1,1,1},360,2498,11000},
{{1,1,1},370,2406,10765},
{{1,1,1},380,2318,10542},
{{1,1,1},390,2235,10331},
{{1,1,1},400,2156,10130}
};

void selectData(){
//445, 541, 245_1, 245_2,144
RQVResultsArray = test544;
return;
	if (avgRates[0] == 5 &amp;&amp; avgRates[1] == 4 &amp;&amp; avgRates[2] == 1)
   		RQVResultsArray = test541;
	else if (avgRates[0] == 4 &amp;&amp; avgRates[1] == 4 &amp;&amp; avgRates[2] == 5)
   		RQVResultsArray = test445;
	else if (avgRates[0] == 2 &amp;&amp; avgRates[1] == 4 &amp;&amp; avgRates[2] == 5)
   		RQVResultsArray = test245_1;
	else if (avgRates[0] == 1 &amp;&amp; avgRates[1] == 4 &amp;&amp; avgRates[2] == 4)
   		RQVResultsArray = test541;
    else if (avgRates[0] == 5 &amp;&amp; avgRates[1] == 4 &amp;&amp; avgRates[2] == 2)
        RQVResultsArray = test542;
	else 
		RQVResultsArray = test245_2;

}

// Template to fill more data
/*RQVResult array[147] = {
                              {0,0,1,20,,},{0,0,1,21,,},{0,0,1,22,,},{0,0,1,23,,},{0,0,1,24,,}, 
                              {0,0,1,25,,},{0,0,1,26,,},{0,0,1,27,,},{0,0,1,28,,},{0,0,1,29,,}, 
                              {0,0,1,30,,},{0,0,1,31,,},{0,0,1,32,,},{0,0,1,33,,},{0,0,1,34,,},
                              {0,0,1,35,,},{0,0,1,36,,},{0,0,1,37,,},{0,0,1,38,,},{0,0,1,39,,},
                              {0,0,1,40,,},

                              {0,1,0,20,,},{0,1,0,21,,},{0,1,0,22,,},{0,1,0,23,,},{0,1,0,24,,}, 
                              {0,1,0,25,,},{0,1,0,26,,},{0,1,0,27,,},{0,1,0,28,,},{0,1,0,29,,}, 
                              {0,1,0,30,,},{0,1,0,31,,},{0,1,0,32,,},{0,1,0,33,,},{0,1,0,34,,},
                              {0,1,0,35,,},{0,1,0,36,,},{0,1,0,37,,},{0,1,0,38,,},{0,1,0,39,,},
                              {0,1,0,40,,},

                              {0,1,1,20,,},{0,1,1,21,,},{0,1,1,22,,},{0,1,1,23,,},{0,1,1,24,,}, 
                              {0,1,1,25,,},{0,1,1,26,,},{0,1,1,27,,},{0,1,1,28,,},{0,1,1,29,,}, 
                              {0,1,1,30,,},{0,1,1,31,,},{0,1,1,32,,},{0,1,1,33,,},{0,1,1,34,,},
                              {0,1,1,35,,},{0,1,1,36,,},{0,1,1,37,,},{0,1,1,38,,},{0,1,1,39,,},
                              {0,1,1,40,,},

                              {1,0,0,20,,},{1,0,0,21,,},{1,0,0,22,,},{1,0,0,23,,},{1,0,0,24,,}, 
                              {1,0,0,25,,},{1,0,0,26,,},{1,0,0,27,,},{1,0,0,28,,},{1,0,0,29,,}, 
                              {1,0,0,30,,},{1,0,0,31,,},{1,0,0,32,,},{1,0,0,33,,},{1,0,0,34,,},
                              {1,0,0,35,,},{1,0,0,36,,},{1,0,0,37,,},{1,0,0,38,,},{1,0,0,39,,},
                              {1,0,0,40,,},

                              {1,0,1,20,,},{1,0,1,21,,},{1,0,1,22,,},{1,0,1,23,,},{1,0,1,24,,}, 
                              {1,0,1,25,,},{1,0,1,26,,},{1,0,1,27,,},{1,0,1,28,,},{1,0,1,29,,}, 
                              {1,0,1,30,,},{1,0,1,31,,},{1,0,1,32,,},{1,0,1,33,,},{1,0,1,34,,},
                              {1,0,1,35,,},{1,0,1,36,,},{1,0,1,37,,},{1,0,1,38,,},{1,0,1,39,,},
                              {1,0,1,40,,},

                              {1,1,0,20,,},{1,1,0,21,,},{1,1,0,22,,},{1,1,0,23,,},{1,1,0,24,,}, 
                              {1,1,0,25,,},{1,1,0,26,,},{1,1,0,27,,},{1,1,0,28,,},{1,1,0,29,,}, 
                              {1,1,0,30,,},{1,1,0,31,,},{1,1,0,32,,},{1,1,0,33,,},{1,1,0,34,,},
                              {1,1,0,35,,},{1,1,0,36,,},{1,1,0,37,,},{1,1,0,38,,},{1,1,0,39,,},
                              {1,1,0,40,,},

                              {1,1,1,20,,},{1,1,1,21,,},{1,1,1,22,,},{1,1,1,23,,},{1,1,1,24,,}, 
                              {1,1,1,25,,},{1,1,1,26,,},{1,1,1,27,,},{1,1,1,28,,},{1,1,1,29,,}, 
                              {1,1,1,30,,},{1,1,1,31,,},{1,1,1,32,,},{1,1,1,33,,},{1,1,1,34,,},
                              {1,1,1,35,,},{1,1,1,36,,},{1,1,1,37,,},{1,1,1,38,,},{1,1,1,39,,},
                              {1,1,1,40,,}
                         };
*/</declaration>
		<location id="id22" x="128" y="88">
			<urgent/>
		</location>
		<location id="id23" x="232" y="0">
			<urgent/>
		</location>
		<location id="id24" x="-32" y="0">
			<name x="-48" y="-40">Waiting</name>
		</location>
		<init ref="id24"/>
		<transition>
			<source ref="id23"/>
			<target ref="id22"/>
			<label kind="assignment" x="144" y="64">selectData()</label>
			<nail x="232" y="88"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id24"/>
			<label kind="synchronisation" x="-24" y="64">finishRQV!</label>
			<nail x="-32" y="88"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id23"/>
			<label kind="synchronisation" x="32" y="-24">startRQV?</label>
		</transition>
	</template>
	<template>
		<name>Planner</name>
		<declaration>int step = 0;
int sensorID;
int count = 0;
/*
void createPlan(){
    step = 0;
    if (bestConfiguration.sensor1 != currentConfiguration.sensor1){
	    bestConfiguration.sensor1 == 1 ? plans[step].planStep = ON_SENSOR : plans[step].planStep = OFF_SENSOR;
        plans[step++].data = 0;
    }
    if (bestConfiguration.sensor2 != currentConfiguration.sensor2){
	    bestConfiguration.sensor2 == 1 ? plans[step].planStep = ON_SENSOR : plans[step].planStep = OFF_SENSOR;
        plans[step++].data = 1;
    }
    if (bestConfiguration.sensor3 != currentConfiguration.sensor3){
	    bestConfiguration.sensor3 == 1 ? plans[step].planStep = ON_SENSOR : plans[step].planStep = OFF_SENSOR;
        plans[step++].data = 2;
    }
    if (bestConfiguration.speed != currentConfiguration.speed){
        plans[step].planStep = CHANGE_SPEED;
        plans[step].data = bestConfiguration.speed;    
    }

    currentConfiguration = bestConfiguration;

}
*/

//const int DO_NOTHING = 1, TURN_ON = 2, TURN_OFF = 3;

bool changeSensorsConfig(){
    return bestConfiguration.sensors != currentConfiguration.sensors;
}

int checkConfig(int sensorId){
    if (bestConfiguration.sensors[sensorId] == currentConfiguration.sensors[sensorId])
        return DO_NOTHING;
    else{
         return bestConfiguration.sensors[sensorId]? ON_SENSOR: OFF_SENSOR;
    }
}

void addStepSensorOn(int sensorId){
    plan.steps[count].step = ON_SENSOR;
    plan.steps[count++].data = sensorId;
}

void addStepSensorOff(int sensorId){
    plan.steps[count].step = OFF_SENSOR;
    plan.steps[count++].data = sensorId;
}

bool changeSpeed(){
    return bestConfiguration.speed != currentConfiguration.speed;
}

void addStepChangeSpeed(){
    plan.steps[count].step = CHANGE_SPEED;
    plan.steps[count++].data = bestConfiguration.speed;
}

void plannerCleanup(){
    currentConfiguration = bestConfiguration;
    plan.stepCount = count;
    count = 0;
}

</declaration>
		<location id="id25" x="297" y="-34">
			<committed/>
		</location>
		<location id="id26" x="382" y="255">
			<name x="365" y="221">ChangeSpeed</name>
			<committed/>
		</location>
		<location id="id27" x="178" y="255">
			<name x="186" y="221">PlanCreated</name>
			<committed/>
		</location>
		<location id="id28" x="714" y="255">
			<name x="620" y="221">CheckSpeed</name>
			<committed/>
		</location>
		<location id="id29" x="714" y="178">
			<name x="476" y="186">SensorsConfigurationCompleted</name>
			<committed/>
		</location>
		<location id="id30" x="476" y="85">
			<committed/>
		</location>
		<location id="id31" x="714" y="85">
			<committed/>
		</location>
		<location id="id32" x="493" y="-34">
			<name x="408" y="-76">ChangeSensorsConfiguration</name>
			<committed/>
		</location>
		<location id="id33" x="178" y="-34">
			<name x="178" y="-68">Plan</name>
			<committed/>
		</location>
		<location id="id34" x="178" y="127" color="#00ff00">
			<name x="186" y="93">Wait</name>
		</location>
		<init ref="id34"/>
		<transition>
			<source ref="id33"/>
			<target ref="id25"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id27"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id34"/>
			<label kind="synchronisation" x="186" y="169">startExecuting!</label>
			<label kind="assignment" x="186" y="186">plannerCleanup()</label>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id26"/>
			<label kind="guard" x="484" y="229">changeSpeed()</label>
			<label kind="assignment" x="484" y="255">addStepChangeSpeed()</label>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id26"/>
			<label kind="guard" x="484" y="280">!changeSpeed()</label>
			<nail x="714" y="306"/>
			<nail x="382" y="306"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id29"/>
			<label kind="guard" x="535" y="144">sensorID == SENSORS - 1</label>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id32"/>
			<label kind="guard" x="527" y="-59">sensorID &lt; SENSORS - 1</label>
			<label kind="assignment" x="620" y="-34">sensorID++</label>
			<nail x="714" y="68"/>
			<nail x="714" y="-34"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id31"/>
			<label kind="guard" x="493" y="110">step == DO_NOTHING</label>
			<nail x="476" y="136"/>
			<nail x="705" y="136"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id31"/>
			<label kind="guard" x="501" y="59">step == OFF_SENSOR</label>
			<label kind="assignment" x="501" y="85">addStepSensorOff(sensorID)</label>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id31"/>
			<label kind="guard" x="501" y="8">step == ON_SENSOR</label>
			<label kind="assignment" x="501" y="34">addStepSensorOn(sensorID)</label>
			<nail x="476" y="34"/>
			<nail x="705" y="34"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id30"/>
			<label kind="assignment" x="467" y="-17">step=checkConfig(sensorID)</label>
			<nail x="442" y="-17"/>
			<nail x="442" y="68"/>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id29"/>
			<label kind="guard" x="305" y="152">!changeSensorsConfig()</label>
			<nail x="297" y="178"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id28"/>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id32"/>
			<label kind="guard" x="314" y="-59">changeSensorsConfig()</label>
			<label kind="assignment" x="314" y="-34">sensorID=0</label>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id33"/>
			<label kind="synchronisation" x="186" y="51">startPlanning?</label>
		</transition>
	</template>
	<template>
		<name>Executor</name>
		<declaration>int planStep;
int data;
int index;

int nextPlanStep(){
    int step;
	step = plan.steps[index].step;
    plan.steps[index].step = 0;
    return step;
}

int nextPlanData(){
    int data;
	data = plan.steps[index].data;
    plan.steps[index].data = 0;
    return data;
}

void executorInit(){
	index = 0;
	data = 0;
}

bool allPlanStepsExecuted(){
	return index == plan.stepCount;
}

void executorCleanup(){
}</declaration>
		<location id="id35" x="-17" y="-136">
			<name x="-27" y="-170">Execute</name>
			<committed/>
		</location>
		<location id="id36" x="374" y="102">
			<name x="334" y="54">ChangeSpeed</name>
			<committed/>
		</location>
		<location id="id37" x="374" y="34">
			<name x="340" y="-8">SensorOff</name>
			<committed/>
		</location>
		<location id="id38" x="374" y="-34">
			<name x="340" y="-76">SensorOn</name>
			<committed/>
		</location>
		<location id="id39" x="153" y="34">
			<name x="161" y="-8">ExecutePlanStep</name>
			<committed/>
		</location>
		<location id="id40" x="-17" y="161">
			<name x="-8" y="127">PlanExecuted</name>
			<committed/>
		</location>
		<location id="id41" x="527" y="34">
			<committed/>
		</location>
		<location id="id42" x="136" y="-136">
			<committed/>
		</location>
		<location id="id43" x="-17" y="25">
			<name x="-8" y="-8">Wait</name>
		</location>
		<init ref="id43"/>
		<transition>
			<source ref="id35"/>
			<target ref="id42"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id41"/>
			<label kind="synchronisation" x="399" y="78">changeSpeed!</label>
			<label kind="assignment" x="391" y="102">newSpeed=data</label>
			<nail x="510" y="102"/>
		</transition>
		<transition>
			<source ref="id37"/>
			<target ref="id41"/>
			<label kind="synchronisation" x="391" y="8">offSensor!</label>
			<label kind="assignment" x="391" y="34">sensorId=data</label>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id41"/>
			<label kind="synchronisation" x="391" y="-59">onSensor!</label>
			<label kind="assignment" x="391" y="-34">sensorId=data</label>
			<nail x="510" y="-34"/>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id36"/>
			<label kind="guard" x="161" y="76">planStep==CHANGE_SPEED</label>
			<nail x="153" y="102"/>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id38"/>
			<label kind="guard" x="170" y="-59">planStep==ON_SENSOR</label>
			<nail x="153" y="-34"/>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id37"/>
			<label kind="guard" x="170" y="8">planStep==OFF_SENSOR</label>
		</transition>
		<transition>
			<source ref="id40"/>
			<target ref="id43"/>
			<label kind="synchronisation" x="-8" y="59">planExecuted!</label>
			<label kind="assignment" x="-8" y="76">executorCleanup()</label>
		</transition>
		<transition>
			<source ref="id41"/>
			<target ref="id42"/>
			<label kind="guard" x="161" y="-161">!allPlanStepsExecuted()</label>
			<nail x="527" y="-136"/>
		</transition>
		<transition>
			<source ref="id41"/>
			<target ref="id40"/>
			<label kind="guard" x="170" y="136">allPlanStepsExecuted()</label>
			<nail x="527" y="161"/>
		</transition>
		<transition>
			<source ref="id42"/>
			<target ref="id39"/>
			<label kind="assignment" x="145" y="-119">planStep = nextPlanStep(),
data = nextPlanData(),
index++</label>
			<nail x="119" y="-102"/>
			<nail x="119" y="0"/>
		</transition>
		<transition>
			<source ref="id43"/>
			<target ref="id35"/>
			<label kind="synchronisation" x="-8" y="-85">startExecuting?</label>
			<label kind="assignment" x="-8" y="-69">executorInit()</label>
		</transition>
	</template>
	<system>// Place template instantiations here

// List one or more processes to be composed into a system.
//system UUV, Sensor, Probe, Effector, Monitor, Analyser, Planner, RQV, Executor;
system Monitor, Analyser, Planner, Executor;//, Probe, RQV, Effector, UUV;</system>
	<queries>
	</queries>
</nta>
